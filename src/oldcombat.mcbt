
# This template contains most of the code that the pack uses.

template throw_held_stack {
    load {
        scoreboard objectives add Temp dummy
    }
    with speed:float precision_horizontal:float precision_vertical:float {
        summon marker ^ ^ ^<%speed%> {Tags:["throw_marker"]}
        summon marker ^ ^ ^ {Tags:["pos_marker"]}
        execute as @n[tag=throw_marker] store result score throw_x Temp run data get entity @s Pos[0] <%precision_horizontal%>
        execute as @n[tag=throw_marker] store result score throw_y Temp run data get entity @s Pos[1] <%precision_vertical%>
        execute as @n[tag=throw_marker] store result score throw_z Temp run data get entity @s Pos[2] <%precision_horizontal%>
        execute as @n[tag=pos_marker] store result score og_x Temp run data get entity @s Pos[0] <%precision_horizontal%>
        execute as @n[tag=pos_marker] store result score og_y Temp run data get entity @s Pos[1] <%precision_vertical%>
        execute as @n[tag=pos_marker] store result score og_z Temp run data get entity @s Pos[2] <%precision_horizontal%>
        scoreboard players operation mx Temp = throw_x Temp
        scoreboard players operation my Temp = throw_y Temp
        scoreboard players operation mz Temp = throw_z Temp
        scoreboard players operation mx Temp -= og_x Temp
        scoreboard players operation my Temp -= og_y Temp
        scoreboard players operation mz Temp -= og_z Temp
        kill @e[tag=throw_marker]
        kill @e[tag=pos_marker]
        summon item ~ ~ ~ {Tags:["thrown"],Item:{id:"minecraft:stone",count:1,components:{}},PickupDelay:40s,Age:0}
        data modify entity @n[tag=thrown,type=item] Thrower set from entity @s UUID
        execute store result entity @n[tag=thrown,type=item] Motion[0] double <%1 / precision_horizontal%> run scoreboard players get mx Temp
        execute store result entity @n[tag=thrown,type=item] Motion[1] double <%1 / precision_vertical%> run scoreboard players get my Temp
        execute store result entity @n[tag=thrown,type=item] Motion[2] double <%1 / precision_horizontal%> run scoreboard players get mz Temp
        execute if entity @s[type=player] run {
            data modify entity @n[tag=thrown,type=item] Item set from entity @s SelectedItem
        }
        execute unless entity @s[type=player] run {
            data modify entity @n[tag=thrown,type=item] Item set from entity @s equipment.mainhand
        }
        tag @n[tag=thrown,type=item] remove thrown
    }
}

template throw_inventory_stack {
    load {
        scoreboard objectives add Temp dummy
    }
    with speed:float precision_horizontal:float precision_vertical:float slot:int {
        summon marker ^ ^ ^<%speed%> {Tags:["throw_marker"]}
        summon marker ^ ^ ^ {Tags:["pos_marker"]}
        execute as @n[tag=throw_marker] store result score throw_x Temp run data get entity @s Pos[0] <%precision_horizontal%>
        execute as @n[tag=throw_marker] store result score throw_y Temp run data get entity @s Pos[1] <%precision_vertical%>
        execute as @n[tag=throw_marker] store result score throw_z Temp run data get entity @s Pos[2] <%precision_horizontal%>
        execute as @n[tag=pos_marker] store result score og_x Temp run data get entity @s Pos[0] <%precision_horizontal%>
        execute as @n[tag=pos_marker] store result score og_y Temp run data get entity @s Pos[1] <%precision_vertical%>
        execute as @n[tag=pos_marker] store result score og_z Temp run data get entity @s Pos[2] <%precision_horizontal%>
        scoreboard players operation mx Temp = throw_x Temp
        scoreboard players operation my Temp = throw_y Temp
        scoreboard players operation mz Temp = throw_z Temp
        scoreboard players operation mx Temp -= og_x Temp
        scoreboard players operation my Temp -= og_y Temp
        scoreboard players operation mz Temp -= og_z Temp
        kill @e[tag=throw_marker]
        kill @e[tag=pos_marker]
        summon item ~ ~ ~ {Tags:["thrown"],Item:{id:"minecraft:stone",count:1,components:{}},PickupDelay:40s,Age:0}
        data modify entity @n[tag=thrown,type=item] Thrower set from entity @s UUID
        execute store result entity @n[tag=thrown,type=item] Motion[0] double <%1 / precision_horizontal%> run scoreboard players get mx Temp
        execute store result entity @n[tag=thrown,type=item] Motion[1] double <%1 / precision_vertical%> run scoreboard players get my Temp
        execute store result entity @n[tag=thrown,type=item] Motion[2] double <%1 / precision_horizontal%> run scoreboard players get mz Temp
        data modify entity @n[tag=thrown,type=item] Item set from entity @s Inventory[{Slot:<%slot%>b}]
        tag @n[tag=thrown,type=item] remove thrown
    }
}

template throw_offhand_stack {
    load {
        scoreboard objectives add Temp dummy
    }
    with speed:float precision_horizontal:float precision_vertical:float {
        summon marker ^ ^ ^<%speed%> {Tags:["throw_marker"]}
        summon marker ^ ^ ^ {Tags:["pos_marker"]}
        execute as @n[tag=throw_marker] store result score throw_x Temp run data get entity @s Pos[0] <%precision_horizontal%>
        execute as @n[tag=throw_marker] store result score throw_y Temp run data get entity @s Pos[1] <%precision_vertical%>
        execute as @n[tag=throw_marker] store result score throw_z Temp run data get entity @s Pos[2] <%precision_horizontal%>
        execute as @n[tag=pos_marker] store result score og_x Temp run data get entity @s Pos[0] <%precision_horizontal%>
        execute as @n[tag=pos_marker] store result score og_y Temp run data get entity @s Pos[1] <%precision_vertical%>
        execute as @n[tag=pos_marker] store result score og_z Temp run data get entity @s Pos[2] <%precision_horizontal%>
        scoreboard players operation mx Temp = throw_x Temp
        scoreboard players operation my Temp = throw_y Temp
        scoreboard players operation mz Temp = throw_z Temp
        scoreboard players operation mx Temp -= og_x Temp
        scoreboard players operation my Temp -= og_y Temp
        scoreboard players operation mz Temp -= og_z Temp
        kill @e[tag=throw_marker]
        kill @e[tag=pos_marker]
        summon item ~ ~ ~ {Tags:["thrown"],Item:{id:"minecraft:stone",count:1,components:{}},PickupDelay:40s,Age:0}
        data modify entity @n[tag=thrown,type=item] Thrower set from entity @s UUID
        execute store result entity @n[tag=thrown,type=item] Motion[0] double <%1 / precision_horizontal%> run scoreboard players get mx Temp
        execute store result entity @n[tag=thrown,type=item] Motion[1] double <%1 / precision_vertical%> run scoreboard players get my Temp
        execute store result entity @n[tag=thrown,type=item] Motion[2] double <%1 / precision_horizontal%> run scoreboard players get mz Temp
        data modify entity @n[tag=thrown,type=item] Item set from entity @s equipment.offhand
        tag @n[tag=thrown,type=item] remove thrown
    }
}

template modify_held_components {
    with data:raw {
        summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
        item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s weapon.mainhand
        data merge entity @n[type=armor_stand,tag=modify_slot] {equipment:{mainhand:{components:<%data%>}}}
        item replace entity @s weapon.mainhand from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
        kill @e[type=armor_stand,tag=modify_slot]
    }
}

template remove_held_component {
    with data:raw {
        summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
        item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s weapon.mainhand
        data remove entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components.<%data%>
        item replace entity @s weapon.mainhand from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
        kill @e[type=armor_stand,tag=modify_slot]
    }
}

template apply_velocity {
    with x:float y:float z:float {
        data modify entity @s Motion set value [<%x%>d,<%y%>d,<%z%>d]
    }
    with x:float z:float {
        data modify entity @s Motion[0] set value <%x%>d
        data modify entity @s Motion[2] set value <%z%>d
    }
    with y:float {
        data modify entity @s Motion[1] set value <%y%>d
    }
}