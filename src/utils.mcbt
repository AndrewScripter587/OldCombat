import ./Logger.mcbt

template set {
    with name:word value:int {
        scoreboard players set <%name%> <%curobj%> <%value%>
    }
    with name:word from:word {
        scoreboard players operation <%name%> <%curobj%> = <%from%> <%curobj%>
    }
}

template change {
    with name:word add value:int {
        scoreboard players add <%name%> <%curobj%> <%value%>
    }
    with name:word rem value:int {
        scoreboard players remove <%name%> <%curobj%> <%value%>
    }
    with name:word reset {
        scoreboard players reset <%name%> <%curobj%>
    }
    with name:word op:word from:word {
        scoreboard players operation <%name%> <%curobj%> <%op%> <%from%> <%curobj%>
    }
}

template addobj {
    with name:word {
        scoreboard objectives add <%name%> dummy
    }
    with name:word mode:raw {
        scoreboard objectives add <%name%> <%mode%>
    }
}

template randomize {
    with name:word range:word {
        execute store result score <%name%> <%curobj%> run random value <%range%>
    }
    with name:word min:int max:int {
        execute store result score <%name%> <%curobj%> run random value <%min%>..<%max%>
    }

}

# Annotations
# Annotations from this template file are prefixed with @ and are used for various things such as dependencies, and for setting various references for templates added in this file.

# @Using annotation 
# Sets the reference scoreboard objective for various templates
# Usage: @Using <objective name>
template @Using {
    with obj:word {
        <%%
            curobj = obj
        %%>
    }
}

# @Requires annotation
# Makes the function return fail and print an exception to the chat of the function runner, if the value of the name specified in the current objective (from @Using) either exists or is not 0 or less.
# Useful for dependency requirements.
# An additional parameter can be added to override the message printed to chat if the requirement check doesn't pass.

template @Requires {
    with exist name:word {
        execute unless score <%name%> <%curobj%> matches 1.. unless score <%name%> <%curobj%> matches ..0 run logger except "Required <%name%> to exist, but it doesn't!"
        execute unless score <%name%> <%curobj%> matches 1.. unless score <%name%> <%curobj%> matches ..0 run return fail
    }
    with exist name:word custommsg:raw {
        execute unless score <%name%> <%curobj%> matches 1.. unless score <%name%> <%curobj%> matches ..0 run logger except <%custommsg%>
        execute unless score <%name%> <%curobj%> matches 1.. unless score <%name%> <%curobj%> matches ..0 run return fail
    }

    with name:word custommsg:raw {
        execute unless score <%name%> <%curobj%> matches 1.. run logger except <%custommsg%>
        execute unless score <%name%> <%curobj%> matches 1.. run return fail
    }
    with name:word {
        execute unless score <%name%> <%curobj%> matches 1.. run logger except ["Required <%name%> to be >= 1, found ",{"score":{"name":"<%name%>","objective":"<%curobj%>"}}]
        execute unless score <%name%> <%curobj%> matches 1.. run return fail
    }

}

# @Incompatible annotation
# Same as @Requires, but the conditions are inverted, so that if the value doesn't exist/is 0 or less it runs return fail and prints to the chat

template @Incompatible {
    with exist name:word custommsg:raw {
        execute if score <%name%> <%curobj%> matches <%(2**31)*-1%>.. run logger except <%custommsg%>
        execute if score <%name%> <%curobj%> matches <%(2**31)*-1%>.. run return fail
    }
    with exist name:word {
        execute if score <%name%> <%curobj%> matches <%(2**31)*-1%>.. run logger except "Incompatibility: <%name%> must not exist, but it does!"
        execute if score <%name%> <%curobj%> matches <%(2**31)*-1%>.. run return fail
    }

    with name:word custommsg:raw {
        execute if score <%name%> <%curobj%> matches 1.. run logger except <%custommsg%>
        execute if score <%name%> <%curobj%> matches 1.. run return fail
    }
    with name:word {
        execute if score <%name%> <%curobj%> matches 1.. run logger except ["Incompatibility: Required <%name%> to not be >= 1, found ",{"score":{"name":"<%name%>","objective":"<%curobj%>"}}]
        execute if score <%name%> <%curobj%> matches 1.. run return fail
    }

}

# @Suggests annotation
# Same as @Requires, but doesn't return fail the function. Useful for cases where the function works okay under the conditions, but recommends that the required value is added.

template @Suggests {
    with exist name:word {
        execute unless score <%name%> <%curobj%> matches 1.. unless score <%name%> <%curobj%> matches ..0 run logger warn "This function suggests <%name%> to exist, but it doesn't!"
    }
    with exist name:word custommsg:raw {
        execute unless score <%name%> <%curobj%> matches 1.. unless score <%name%> <%curobj%> matches ..0 run logger warn <%custommsg%>
    }

    with name:word custommsg:raw {
        execute unless score <%name%> <%curobj%> matches 1.. run logger warn <%custommsg%>
    }
    with name:word {
        execute unless score <%name%> <%curobj%> matches 1.. run logger warn ["This function suggests for <%name%> to be >= 1, found ",{"score":{"name":"<%name%>","objective":"<%curobj%>"}}]
    }

}

# @Conflicts annotation
# Same as @Incompatible, but doesn't return fail the function. Useful for cases where the function works okay under the conditions, but recommends that the conflict is resolved.

template @Conflicts {
    with exist name:word custommsg:raw {
        execute if score <%name%> <%curobj%> matches <%(2**31)*-1%>.. run logger warn <%custommsg%>
    }
    with exist name:word {
        execute if score <%name%> <%curobj%> matches <%(2**31)*-1%>.. run logger warn "Conflict: <%name%> is recommended to not exist by this function, but it does!"
    }

    with name:word custommsg:raw {
        execute if score <%name%> <%curobj%> matches 1.. run logger warn <%custommsg%>
    }
    with name:word {
        execute if score <%name%> <%curobj%> matches 1.. run logger warn ["Conflict: This function suggests <%name%> to not be >= 1, found ",{"score":{"name":"<%name%>","objective":"<%curobj%>"}}]
    }

}

# @Deprecated annotation
# When the annotation is run, always displays a warning in the chat of the invoking player, stating that the feature is deprecated and shouldn't be used, and will be removed eventually.

template @Deprecated {
    with msg:raw {
#        logger warn ["Deprecation Warning: ",<%msg%>]
    }

    with {
#        logger warn ["Deprecation Warning: ","This function/feature is deprecated, and should not be used or depended on, as the feature/function will be removed in the future."]
    }
}

# @Unstable annotation
# Marks that the function is unstable and can have bugs or unintended behavior
template @Unstable {
    with msg:raw {
        logger warn ["Instability Warning: ",<%msg%>]
    }

    with {
        logger warn ["Instability Warning: ","This function/feature is marked as unstable, and should not be used or depended on as it could have issues, bugs, or unintended behavior"]
    }
}

