import ./oldcombat.mcbt
import ./z_configmenu.mcbt
import ./Logger.mcbt
import ./data.mcbt
import ./utils.mcbt

<%%
    $1_21_4compile = false
    build_time = Date()
    data_version = 11
    vector_names = ["x","y","z"]
%%>

<%%
    spacing = "\\t".repeat(0);
%%>

function print_mcb_context {
    tellraw @s '<%JSON.stringify(context)%>'
}

<%%
    // Not including the default 1 base point of damage from your fist
    damages = {
        new: {
            "minecraft:wooden_sword": 3,
            "minecraft:stone_sword": 4,
            "minecraft:iron_sword": 5,
            "minecraft:golden_sword": 3,
            "minecraft:diamond_sword": 6,
            "minecraft:netherite_sword": 7,
            "minecraft:wooden_axe": 6,
            "minecraft:stone_axe": 8,
            "minecraft:iron_axe": 8,
            "minecraft:golden_axe": 6,
            "minecraft:diamond_axe": 8,
            "minecraft:netherite_axe": 9,
            "minecraft:trident": 8,
            "minecraft:wooden_shovel": 1.5,
            "minecraft:stone_shovel": 2.5,
            "minecraft:iron_shovel": 3.5,
            "minecraft:golden_shovel": 1.5,
            "minecraft:diamond_shovel": 4.5,
            "minecraft:netherite_shovel": 5.5,
            "minecraft:wooden_pickaxe": 1,
            "minecraft:stone_pickaxe": 2,
            "minecraft:iron_pickaxe": 3,
            "minecraft:golden_pickaxe": 1,
            "minecraft:diamond_pickaxe": 4,
            "minecraft:netherite_pickaxe": 5,
            "minecraft:wooden_hoe": 1,
            "minecraft:stone_hoe": 1,
            "minecraft:iron_hoe": 1,
            "minecraft:golden_hoe": 1,
            "minecraft:diamond_hoe": 1,
            "minecraft:netherite_hoe": 1,
            "minecraft:mace": 5,
            base: 1
        },
        old: {
            "minecraft:wooden_sword": 4,
            "minecraft:stone_sword": 5,
            "minecraft:iron_sword": 6,
            "minecraft:golden_sword": 4,
            "minecraft:diamond_sword": 7,
            "minecraft:netherite_sword": 8,
            "minecraft:wooden_axe": 3,
            "minecraft:stone_axe": 4,
            "minecraft:iron_axe": 5,
            "minecraft:golden_axe": 3,
            "minecraft:diamond_axe": 6,
            "minecraft:netherite_axe": 7,
            "minecraft:trident": 8,
            "minecraft:wooden_shovel": 1,
            "minecraft:stone_shovel": 2,
            "minecraft:iron_shovel": 3,
            "minecraft:golden_shovel": 1,
            "minecraft:diamond_shovel": 4,
            "minecraft:netherite_shovel": 5,
            "minecraft:wooden_pickaxe": 2,
            "minecraft:stone_pickaxe": 3,
            "minecraft:iron_pickaxe": 4,
            "minecraft:golden_pickaxe": 2,
            "minecraft:diamond_pickaxe": 5,
            "minecraft:netherite_pickaxe": 6,
            "minecraft:wooden_hoe": 1,
            "minecraft:stone_hoe": 1,
            "minecraft:iron_hoe": 1,
            "minecraft:golden_hoe": 1,
            "minecraft:diamond_hoe": 1,
            "minecraft:netherite_hoe": 1,
            "minecraft:mace": 5,
            // fist damage
            base: 1
        }

    }
%%>


function on_load minecraft:load{
    
    # you can use MC-Build without its internal scoreboard but this will limit the available features
    scoreboard objectives add mcb.internal dummy
    scoreboard objectives add OldCombatTemp dummy
    IF ($1_21_4compile) {
        scoreboard players set IsLegacy OldCombatTemp 1
    } ELSE {
        scoreboard players set IsLegacy OldCombatTemp 0
    }
    tellraw @a "Loading Old Combat Datapack by AndrewGaming587"

    object_to_nbt_key <%damages.new%> storage oldcombat:data damages.new
    object_to_nbt_key <%damages.old%> storage oldcombat:data damages.old

}

tag items consumable {
    minecraft:baked_potato
    minecraft:pumpkin_pie
    minecraft:honey_bottle
    minecraft:ominous_bottle
    minecraft:dried_kelp
    minecraft:sweet_berries
    minecraft:glow_berries
    minecraft:bread
    minecraft:cooked_cod
    minecraft:cooked_salmon
    minecraft:cooked_beef
    minecraft:cooked_porkchop
    minecraft:cooked_chicken
    minecraft:cooked_rabbit
    minecraft:cooked_mutton
    minecraft:cookie
    minecraft:poisonous_potato
    minecraft:pufferfish
    minecraft:spider_eye
    minecraft:chicken
    minecraft:rotten_flesh
    minecraft:apple
    minecraft:golden_apple
    minecraft:enchanted_golden_apple
    minecraft:melon_slice
    minecraft:golden_carrot
    minecraft:cod
    minecraft:salmon
    minecraft:tropical_fish
    minecraft:beef
    minecraft:porkchop
    minecraft:chicken
    minecraft:rabbit
    minecraft:mutton
    minecraft:beetroot_soup
    minecraft:mushroom_stew
    minecraft:rabbit_stew
    minecraft:suspicious_stew
    minecraft:carrot
    minecraft:potato
    minecraft:beetroot
    minecraft:potion
}

tag entity_type old_ai_supported {
    minecraft:creeper
    #minecraft:zombies
    #minecraft:skeletons
    #minecraft:arthropod
    minecraft:iron_golem
    #minecraft:raiders
    minecraft:wolf
    minecraft:piglin
    minecraft:piglin_brute
    minecraft:zombified_piglin
    minecraft:giant
    minecraft:hoglin
    minecraft:pig
    minecraft:cow
    minecraft:sheep
    minecraft:chicken
    minecraft:enderman
}

function on_tick minecraft:tick {
    execute if score Disable OldCombatSettings matches 1 run return fail
    execute as @e run block check_ground {
        # execute if entity @s[type=!player] store result score @s WasOnGround run data get entity @s OnGround
        execute store result score @s WasOnGround run scoreboard players get @s OnGround
        execute store result score @s OnGround run data get entity @s OnGround
    }

    execute if score StartDelay OldCombatTemp matches 1.. run {
        scoreboard players remove StartDelay OldCombatTemp 1
    } else execute run {
            execute as @a if score @s Hunger matches 0.. store result entity @s foodLevel int 1 run scoreboard players get @s Hunger
            execute as @e[type=!player] run {
                scoreboard players operation @s LastHurtByTimestamp = @s HurtByTimestamp
                execute store result score @s HurtByTimestamp run data get entity @s HurtByTimestamp
                function buff_knockback
                function air_knockback
                
            }
            function disable_sprinting
            function old_tool_damages
            function disable_cooldown
            function block_offhand
            function disable_modern_items
            function disable_netherite_items

            function disable_vanilla_sharpness
            function old_tooltip
            function old_sharpness
            function old_regen
            function disable_swimming

            function sword_blocking
            function nerf_shields
            function disable_kb_resist
            function enforce_locked_settings
            function fishing_rod_kb
            function disable_attack_sounds
            function bedrock_fishing_bobber_physics
            function old_fishing_bobber_velocity
            function bedrock_fishing_bobber_physics2
            function old_hunger_system
            function old_food
            function old_mob_ai
            function farsight
            function disable_crits
            execute store result storage oldcombat:temp distx float 1 run scoreboard players get FishingBobberBoost.X OldCombatSettings
            execute store result storage oldcombat:temp disty float 1 run scoreboard players get FishingBobberBoost.Y OldCombatSettings
            function further_fishing_bobber with storage oldcombat:temp
            
    }
}

function disable_crits {
    execute if score DisableCrits OldCombatSettings matches 1 as @a run {
        execute store result score yv OldCombatTemp run data get entity @s Motion[1] 100
        attribute @s attack_damage modifier remove oldcombat:nocrit
        stopsound @a * minecraft:entity.player.attack.crit
        execute if score yv OldCombatTemp matches ..-9 unless score @s Sprinting matches 1.. run attribute @s attack_damage modifier add oldcombat:nocrit -0.333333333 add_multiplied_total
        
    } else execute as @a run {
        attribute @s attack_damage modifier remove oldcombat:nocrit
    }
}

function requiretest {
    @Using OldCombatTemp
    @Requires aputils
}

function fix_illegal_mainhand_stack {
    fix_illegal_stack mainhand
}

function fix_illegal_offhand_stack {
    fix_illegal_stack offhand
}

function old_mob_ai {
    load {
        addobj WanderTargetX
        addobj WanderTargetY
        addobj WanderTargetZ
        addobj TicksUntilWander
        addobj WanderTime
        addobj JumpTimer
    }
    # execute if score OldMobAI OldCombatSettings matches 1 run tag @e[type=#undead] add old_ai_valid_entity
    execute if score OldMobAI OldCombatSettings matches 1 run tag @e[type=#oldcombat:old_ai_supported] add old_ai_valid_entity
    execute if score OldMobAI OldCombatSettings matches 1 as @e[tag=old_ai_valid_entity] at @s run {
        attribute @s movement_speed modifier remove oldcombat:nonormalmove
        
        # Prevent unintended behavior under certain conditions
        execute on vehicle run return fail
        execute on passengers run return fail
        execute on leasher run return fail
        execute on controller run return fail
        execute if data entity @s {Sitting:true} run return fail
        
        execute on target run tag @s add target
        
        
        # execute unless entity @n[tag=target] run say No Target!
        # execute if entity @n[tag=target] run say Target!
        # execute on target at @s run particle electric_spark ~ ~2 ~
        # execute unless entity @n[tag=target] run return fail
        execute unless entity @n[tag=target] unless score EnableWander OldCombatSettings matches 1 run return fail
        execute unless entity @n[tag=target] run {
            
            @Using OldCombatTemp
            set HasTarget 0
            @Using TicksUntilWander
            
            execute if score @s TicksUntilWander matches ..0 run {
                
                set @s 100
                @Using OldCombatTemp
                randomize wx -10..10
                randomize wz -10..10
                execute store result score @s WanderTargetX run data get entity @s Pos[0]
                execute store result score @s WanderTargetZ run data get entity @s Pos[2]
                scoreboard players operation @s WanderTargetX += wx OldCombatTemp
                scoreboard players operation @s WanderTargetZ += wz OldCombatTemp
                @Using WanderTime
                set @s 200
            } else execute if score @s WanderTime matches 0 run {
                @Using TicksUntilWander
                execute unless score @s WanderTime matches 1.. unless score @s TicksUntilWander matches 1.. run randomize @s 20..200
                change @s rem 1
            }
            
            execute store result storage oldcombat:temp wx int 1 run scoreboard players get @s WanderTargetX
            execute store result storage oldcombat:temp wz int 1 run scoreboard players get @s WanderTargetZ
            execute if score @s WanderTime matches 1.. run {
            attribute @s movement_speed modifier remove oldcombat:nonormalmove
            block { with storage oldcombat:temp
                
                $summon marker $(wx) ~ $(wz) {Tags:["target","wander"]}
                # $execute if entity @p[distance=..10] run say $(wx) $(wz)
            }
            } else execute run {
                attribute @s movement_speed modifier add oldcombat:nonormalmove -1 add_multiplied_total
            }
            @Using WanderTime
            execute if score @s WanderTime matches 1.. run change @s rem 1
            execute if entity @n[type=marker,tag=target,distance=..0.25,tag=wander] run scoreboard players set @s WanderTime 0
        } else execute run {
            @Using OldCombatTemp
            set HasTarget 1
            @Using WanderTime
            set @s 0
            execute unless score @s WanderTime matches 0.. run set @s 0
        }
        execute unless entity @n[tag=target] run return fail
        tag @s add this
        execute if entity @n[tag=target,distance=..8] unless entity @s[type=!skeleton,type=!stray,type=!bogged,type=!pillager,type=!witch] if entity @n[tag=target] run attribute @s movement_speed modifier add oldcombat:nonormalmove -1 add_multiplied_total
        execute if entity @n[tag=target,distance=..8] unless entity @s[type=!skeleton,type=!stray,type=!bogged] if items entity @s weapon.mainhand bow run return -1
        execute if entity @n[tag=target,distance=..8] unless entity @s[type=!piglin] if items entity @s weapon.mainhand crossbow run attribute @s movement_speed modifier add oldcombat:nonormalmove -1 add_multiplied_total
        execute if entity @n[tag=target,distance=..8] unless entity @s[type=!piglin,type=!pillager] if items entity @s weapon.mainhand crossbow run return -1
        execute if entity @n[tag=target,distance=..8] unless entity @s[type=!witch] run return -1
        execute facing entity @n[tag=target] eyes run function utils/get_walk_forward_vectors
        execute if entity @s[type=creeper] if entity @n[tag=target,distance=..3,tag=!wander] run tag @s add circle
        attribute @s[type=creeper,tag=circle] movement_speed modifier add oldcombat:fast_circle 0 add_multiplied_base
        attribute @s[type=creeper,tag=!circle] movement_speed modifier remove oldcombat:fast_circle
        # execute if entity @s[type=creeper] if entity @n[tag=target,distance=6..] run tag @s remove circle
        execute if entity @s[type=creeper] if entity @n[tag=target,tag=wander] run tag @s remove circle
        execute if entity @s[type=creeper,tag=circle] facing entity @n[tag=target,distance=..1.5] eyes rotated ~115 ~ run function utils/get_walk_forward_vectors
        execute if entity @s[type=creeper,tag=circle] facing entity @n[tag=target,distance=1.5..2] eyes rotated ~85 ~ run function utils/get_walk_forward_vectors
        execute if entity @s[type=creeper,tag=circle] facing entity @n[tag=target,distance=2..4] eyes rotated ~80 ~ run function utils/get_walk_forward_vectors
        execute if entity @s[type=creeper,tag=circle] facing entity @n[tag=target,distance=4..5] eyes rotated ~60 ~ run function utils/get_walk_forward_vectors
        execute if entity @s[type=creeper,tag=circle] facing entity @n[tag=target,distance=5..6] eyes rotated ~20 ~ run function utils/get_walk_forward_vectors
        execute if entity @s[type=creeper,tag=circle] facing entity @n[tag=target,distance=6..7] eyes rotated ~5 ~ run function utils/get_walk_forward_vectors
        execute if entity @s[type=creeper,tag=circle] facing entity @n[tag=target,distance=8..] eyes rotated ~ ~ run function utils/get_walk_forward_vectors
        
        scoreboard players set ground OldCombatTemp 0
        execute if data entity @s {OnGround:true} run scoreboard players set ground OldCombatTemp 1
        execute unless score HasTarget OldCombatTemp matches 1 unless score @s WanderTime matches 1.. run return 0
        execute if score ground OldCombatTemp matches 1 run {
            # execute unless entity @s[type=!spider,type=!cave_spider] if block ~ ~-0.1 ~ air run return 0
            # execute anchored eyes run particle minecraft:electric_spark ^ ^ ^1
            execute store result score xv OldCombatTemp run data get entity @s Motion[0] 1000
            execute store result score yv OldCombatTemp run data get entity @s Motion[1] 1000
            execute store result score zv OldCombatTemp run data get entity @s Motion[2] 1000
            
            execute at @s facing entity @n[tag=target] feet run tp @s ~ ~ ~ ~ ~
            scoreboard players operation xv2 OldCombatTemp = VecX OldCombatTemp
            scoreboard players set yv2 OldCombatTemp 0
            scoreboard players operation zv2 OldCombatTemp = VecZ OldCombatTemp
            execute store result score speed OldCombatTemp run attribute @s movement_speed get 100
            
            scoreboard players operation sm1 OldCombatTemp = speed OldCombatTemp
            execute if block ~ ~ ~ water unless entity @s[type=drowned] run scoreboard players set yv2 OldCombatTemp 100
            scoreboard players set sm2 OldCombatTemp 350
            scoreboard players operation xv2 OldCombatTemp *= sm1 OldCombatTemp
            scoreboard players operation xv2 OldCombatTemp /= sm2 OldCombatTemp
            execute if entity @s[type=drowned] if block ~ ~ ~ water run scoreboard players operation yv2 OldCombatTemp *= sm1 OldCombatTemp
            execute if entity @s[type=drowned] if block ~ ~ ~ water run scoreboard players operation yv2 OldCombatTemp /= sm2 OldCombatTemp
            scoreboard players operation zv2 OldCombatTemp *= sm1 OldCombatTemp
            scoreboard players operation zv2 OldCombatTemp /= sm2 OldCombatTemp
            execute store result entity @s Motion[0] double 0.001 run scoreboard players operation xv OldCombatTemp += xv2 OldCombatTemp
            execute store result entity @s Motion[1] double 0.001 run scoreboard players operation yv OldCombatTemp += yv2 OldCombatTemp
            execute store result entity @s Motion[2] double 0.001 run scoreboard players operation zv OldCombatTemp += zv2 OldCombatTemp
            execute at @s rotated ~ 0 positioned ~ ~0.2 ~ unless block ^ ^ ^1 air unless block ^ ^ ^1 #flowers unless block ^ ^ ^1 short_grass unless block ^ ^ ^1 #coral_plants unless block ^ ^ ^1 bush unless block ^ ^ ^1 tall_grass unless block ^ ^ ^1 leaf_litter run {
                data modify entity @s Motion[1] set value 0.5d
                execute store result entity @s Motion[0] double 0.001 run data get entity @s Motion[0] 1500
                execute store result entity @s Motion[2] double 0.001 run data get entity @s Motion[2] 1500
                data modify entity @s fall_distance set value 0
                scoreboard players set @s JumpTimer 10
            }
            execute if entity @n[tag=target] run attribute @s movement_speed modifier add oldcombat:nonormalmove -1 add_multiplied_total

        } else execute if entity @s[type=!spider,type=!cave_spider,type=!wolf,type=!fox] run {
            # execute anchored eyes run particle minecraft:electric_spark ^ ^ ^1
            execute store result score xv OldCombatTemp run data get entity @s Motion[0] 1000
            execute store result score yv OldCombatTemp run data get entity @s Motion[1] 1000
            execute store result score zv OldCombatTemp run data get entity @s Motion[2] 1000
            
            execute at @s facing entity @n[tag=target] feet run tp @s ~ ~ ~ ~ ~
            scoreboard players set xv2 OldCombatTemp 0
            scoreboard players set yv2 OldCombatTemp 0
            scoreboard players set zv2 OldCombatTemp 0
            execute if data entity @s {HurtTime:0s} run {
            scoreboard players operation xv2 OldCombatTemp = VecX OldCombatTemp
            scoreboard players set yv2 OldCombatTemp 0
            scoreboard players operation zv2 OldCombatTemp = VecZ OldCombatTemp
            scoreboard players set sm1 OldCombatTemp 0
            execute if score @s JumpTimer matches 1.. run scoreboard players set sm1 OldCombatTemp 64
            execute unless data entity @s {HurtTime:0s} run scoreboard players set sm1 OldCombatTemp -128
            
            execute if score @s JumpTimer matches 1.. run scoreboard players remove @s JumpTimer 1
            execute if block ~ ~ ~ water run scoreboard players set sm1 OldCombatTemp 16
            execute if block ~ ~ ~ water unless entity @s[type=drowned] run scoreboard players set yv2 OldCombatTemp 100
            scoreboard players set sm2 OldCombatTemp 2048
            scoreboard players operation xv2 OldCombatTemp *= sm1 OldCombatTemp
            scoreboard players operation xv2 OldCombatTemp /= sm2 OldCombatTemp
            execute if entity @s[type=drowned] if block ~ ~ ~ water run scoreboard players operation yv2 OldCombatTemp *= sm1 OldCombatTemp
            execute if entity @s[type=drowned] if block ~ ~ ~ water run scoreboard players operation yv2 OldCombatTemp /= sm2 OldCombatTemp
            scoreboard players operation zv2 OldCombatTemp *= sm1 OldCombatTemp
            scoreboard players operation zv2 OldCombatTemp /= sm2 OldCombatTemp
            }
            execute store result entity @s Motion[0] double 0.001 run scoreboard players operation xv OldCombatTemp += xv2 OldCombatTemp
            execute store result entity @s Motion[1] double 0.001 run scoreboard players operation yv OldCombatTemp += yv2 OldCombatTemp
            execute store result entity @s Motion[2] double 0.001 run scoreboard players operation zv OldCombatTemp += zv2 OldCombatTemp
            # execute if block ~ ~0.1 ~ water if entity @s[type=#undead] run data modify entity @s Motion[1] set value 0.25d
            execute if entity @n[tag=target] run attribute @s movement_speed modifier add oldcombat:nonormalmove -1 add_multiplied_total
        } else execute run {
            # execute anchored eyes run particle minecraft:electric_spark ^ ^ ^1
            execute store result score xv OldCombatTemp run data get entity @s Motion[0] 1000
            #execute store result score yv OldCombatTemp run data get entity @s Motion[1] 1000
            execute store result score zv OldCombatTemp run data get entity @s Motion[2] 1000
            
            #execute at @s facing entity @n[tag=target] feet run tp @s ~ ~ ~ ~ ~
            scoreboard players set xv2 OldCombatTemp 0
            scoreboard players set yv2 OldCombatTemp 0
            scoreboard players set zv2 OldCombatTemp 0
            execute if data entity @s {HurtTime:0s} run {
            scoreboard players operation xv2 OldCombatTemp = VecX OldCombatTemp
            scoreboard players set yv2 OldCombatTemp 0
            scoreboard players operation zv2 OldCombatTemp = VecZ OldCombatTemp
            scoreboard players set sm1 OldCombatTemp 0
            execute if score @s JumpTimer matches 1.. run scoreboard players set sm1 OldCombatTemp 64
            execute unless data entity @s {HurtTime:0s} run scoreboard players set sm1 OldCombatTemp -128
            
            execute if score @s JumpTimer matches 1.. run scoreboard players remove @s JumpTimer 1
            execute if block ~ ~ ~ water run scoreboard players set sm1 OldCombatTemp 16
            scoreboard players set yv2 OldCombatTemp 0
            execute if block ~ ~ ~ water unless entity @s[type=drowned] run scoreboard players set yv2 OldCombatTemp 100
            scoreboard players set sm2 OldCombatTemp 2048
            scoreboard players operation xv2 OldCombatTemp *= sm1 OldCombatTemp
            scoreboard players operation xv2 OldCombatTemp /= sm2 OldCombatTemp
            execute if entity @s[type=drowned] if block ~ ~ ~ water run scoreboard players operation yv2 OldCombatTemp *= sm1 OldCombatTemp
            execute if entity @s[type=drowned] if block ~ ~ ~ water run scoreboard players operation yv2 OldCombatTemp /= sm2 OldCombatTemp
            scoreboard players operation zv2 OldCombatTemp *= sm1 OldCombatTemp
            scoreboard players operation zv2 OldCombatTemp /= sm2 OldCombatTemp
            }
            execute store result entity @s Motion[0] double 0.001 run scoreboard players operation xv OldCombatTemp += xv2 OldCombatTemp
            #execute store result entity @s Motion[1] double 0.001 run scoreboard players get yv OldCombatTemp
            execute store result entity @s Motion[2] double 0.001 run scoreboard players operation zv OldCombatTemp += zv2 OldCombatTemp
            # execute if block ~ ~0.1 ~ water if entity @s[type=#undead] run data modify entity @s Motion[1] set value 0.25d
            execute if entity @n[tag=target] run attribute @s movement_speed modifier add oldcombat:nonormalmove -1 add_multiplied_total

        }
        kill @e[tag=target,type=marker,tag=wander]
        execute if entity @n[tag=target] run attribute @s movement_speed modifier add oldcombat:nonormalmove -1 add_multiplied_total
        tag @n[tag=target] remove target
        tag @s remove this
        
    } else execute as @e[tag=old_ai_valid_entity] run {
        attribute @s movement_speed modifier remove oldcombat:nonormalmove
    }
}


function old_food {
    execute if score OldFood OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] if items entity @s weapon.mainhand #oldcombat:consumable unless data entity @s {SelectedItem:{components:{"minecraft:custom_data":{oldcombat_oldfood:1b}}}} run {
        modify_held_components {"minecraft:consumable":{consume_seconds:0.05,animation:none,sound:"minecraft:intentionally_empty",has_consume_particles:false},"minecraft:custom_data":{oldcombat_oldfood:1b},"minecraft:max_stack_size":1}
        execute if items entity @s weapon.mainhand golden_apple run {
            modify_held_components {"minecraft:consumable":{consume_seconds:0.05,animation:none,sound:"minecraft:intentionally_empty",has_consume_particles:false,on_consume_effects:[{type:apply_effects,effects:[{id:"minecraft:absorption",duration:2400,amplifier:0},{id:"minecraft:regeneration",duration:200,amplifier:1}]}]},"minecraft:custom_data":{oldcombat_oldfood:1b},"minecraft:max_stack_size":1}
        }
        execute if items entity @s weapon.mainhand enchanted_golden_apple run {
            modify_held_components {"minecraft:consumable":{consume_seconds:0.05,animation:none,sound:"minecraft:intentionally_empty",has_consume_particles:false,on_consume_effects:[{type:apply_effects,effects:[{id:"minecraft:absorption",duration:2400,amplifier:3},{id:"minecraft:regeneration",duration:400,amplifier:1},{id:"minecraft:resistance",duration:6000,amplifier:0},{id:"minecraft:fire_resistance",duration:6000,amplifier:0}]}]},"minecraft:custom_data":{oldcombat_oldfood:1b},"minecraft:max_stack_size":1}
        }
        execute unless data entity @s {SelectedItem:{count:1}} at @s run {
            function fix_illegal_mainhand_stack
        }

        
    } 
    execute if score OldFood OldCombatSettings matches 0 as @a if items entity @s weapon.mainhand #oldcombat:consumable if data entity @s {SelectedItem:{components:{"minecraft:custom_data":{oldcombat_oldfood:1b}}}} run {
        remove_held_component "minecraft:consumable"
        remove_held_component "minecraft:max_stack_size"
        remove_held_component "minecraft:custom_data".oldcombat_oldfood
    }
    execute if score OldFood OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] if items entity @s weapon.offhand #oldcombat:consumable unless data entity @s {equipment:{offhand:{components:{"minecraft:custom_data":{oldcombat_oldfood:1b}}}}} run {
        modify_offheld_components {"minecraft:consumable":{consume_seconds:0.05,animation:none,sound:"minecraft:intentionally_empty",has_consume_particles:false},"minecraft:custom_data":{oldcombat_oldfood:1b},"minecraft:max_stack_size":1}
        execute if items entity @s weapon.offhand golden_apple run {
            modify_offheld_components {"minecraft:consumable":{consume_seconds:0.05,animation:none,sound:"minecraft:intentionally_empty",has_consume_particles:false,on_consume_effects:[{type:apply_effects,effects:[{id:"minecraft:absorption",duration:2400,amplifier:0},{id:"minecraft:regeneration",duration:200,amplifier:1}]}]},"minecraft:custom_data":{oldcombat_oldfood:1b},"minecraft:max_stack_size":1}
        }
        execute if items entity @s weapon.offhand enchanted_golden_apple run {
            modify_offheld_components {"minecraft:consumable":{consume_seconds:0.05,animation:none,sound:"minecraft:intentionally_empty",has_consume_particles:false,on_consume_effects:[{type:apply_effects,effects:[{id:"minecraft:absorption",duration:2400,amplifier:3},{id:"minecraft:regeneration",duration:400,amplifier:1},{id:"minecraft:resistance",duration:6000,amplifier:0},{id:"minecraft:fire_resistance",duration:6000,amplifier:0}]}]},"minecraft:custom_data":{oldcombat_oldfood:1b},"minecraft:max_stack_size":1}
        }
        execute unless data entity @s {equipment:{offhand:{count:1}}} at @s run {
            function fix_illegal_offhand_stack
        }
    }
    execute if score OldFood OldCombatSettings matches 0 as @a if items entity @s weapon.offhand #oldcombat:consumable if data entity @s {equipment:{offhand:{components:{"minecraft:custom_data":{oldcombat_oldfood:1b}}}}} run {
        remove_offheld_component "minecraft:consumable"
        remove_offheld_component "minecraft:max_stack_size"
        remove_offheld_component "minecraft:custom_data".oldcombat_oldfood
    }
    execute if score OldFood OldCombatSettings matches 1 as @e[type=item] unless data entity @s {Item:{components:{"minecraft:custom_data":{oldcombat_oldfood:1b}}}} at @s run {
        summon armor_stand ~ ~ ~ {ShowArms:1b,Invisible:1b,Invulnerable:1b,marker:1b,Tags:["item_checker"]}
        data modify entity @n[type=armor_stand,tag=item_checker] equipment.mainhand set from entity @s Item
        execute as @n[type=armor_stand,tag=item_checker] if items entity @s weapon.mainhand #oldcombat:consumable run {
            modify_held_components {"minecraft:consumable":{consume_seconds:0.05,animation:none,sound:"minecraft:intentionally_empty",has_consume_particles:false},"minecraft:custom_data":{oldcombat_oldfood:1b},"minecraft:max_stack_size":1}
        }
        kill @e[type=armor_stand,tag=item_checker]
    }
    execute if score OldFood OldCombatSettings matches 0 as @e[type=item] if data entity @s {Item:{components:{"minecraft:custom_data":{oldcombat_oldfood:1b}}}} run {
        summon armor_stand ~ ~ ~ {ShowArms:1b,Invisible:1b,Invulnerable:1b,marker:1b,Tags:["item_checker"]}
        data modify entity @n[type=armor_stand,tag=item_checker] equipment.mainhand set from entity @s Item
        execute as @n[type=armor_stand,tag=item_checker] if items entity @s weapon.mainhand #oldcombat:consumable run {
            remove_held_component "minecraft:consumable"
            remove_held_component "minecraft:max_stack_size"
            remove_held_component "minecraft:custom_data".oldcombat_oldfood
        }
        kill @e[type=armor_stand,tag=item_checker]
    }
}

function farsight {
    execute if score MobFarSight OldCombatSettings matches 1 as @e run attribute @s follow_range modifier remove oldcombat:farsight
    execute if score MobFarSight OldCombatSettings matches 1 as @e run attribute @s follow_range modifier add oldcombat:farsight 3 add_multiplied_total
    execute if score MobFarSight OldCombatSettings matches 0 as @e run attribute @s follow_range modifier remove oldcombat:farsight
}

function old_hunger_system {
    @Using OldCombatTemp
    @Requires aputils
    load {
        scoreboard players set @a ActualFoodLevel -1
        scoreboard players set @a OldHungerApplied 0
    }
    execute if score OldHungerSystem OldCombatSettings matches 1 as @a run {
        execute unless score @s ActualFoodLevel matches -1 unless data entity @s {foodLevel:0} run {
            execute store result score Health OldCombatTemp run data get entity @s Health 100
            execute store result score foodLevel OldCombatTemp run data get entity @s foodLevel 100
            execute store result entity @s Health float 0.01 run scoreboard players operation Health OldCombatTemp += foodLevel OldCombatTemp
        }
        execute if score @s ActualFoodLevel matches -1 store result score @s ActualFoodLevel run data get entity @s foodLevel
        data modify entity @s foodLevel set value 0
        data modify entity @s foodSaturationLevel set value 0.0f
        data modify entity @s foodTickTimer set value 0
        data modify entity @s foodExhaustionLevel set value 0.0f
        effect clear @s hunger
        attribute @s[gamemode=!creative,gamemode=!spectator] movement_speed modifier remove sprinting
    } else execute as @a run {
        execute unless score @s ActualFoodLevel matches -1 store result entity @s foodLevel int 1 run scoreboard players get @s ActualFoodLevel
        scoreboard players set @s ActualFoodLevel -1
        scoreboard players set @s OldHungerApplied 0
    }
}

function bedrock_fishing_bobber_physics2 {
    execute if score BedrockFishingBobberPhysics OldCombatSettings matches 1 as @e[type=fishing_bobber] at @s run {
        execute unless entity @s[tag=bfbp.processed] run {
            data modify storage oldcombat:temp Motion set from entity @s Motion
            tag @s add this
            execute on origin rotated as @s rotated ~ 0 as @e[tag=this] run tp ^ ^ ^0.2
            tag @s remove this
            data modify entity @s Motion set from storage oldcombat:temp Motion

            execute store result score yv OldCombatTemp run data get entity @s Motion[1] 1000
            execute store result entity @s Motion[1] double 0.001 run scoreboard players add yv OldCombatTemp 100
            execute store result score y OldCombatTemp run data get entity @s Pos[1] 1000
            execute store result entity @s Pos[1] double 0.001 run scoreboard players remove y OldCombatTemp 500
        }
    }
    execute as @e[type=fishing_bobber] run tag @s add bfbp.processed
}

function bedrock_fishing_bobber_physics {
    execute if score BedrockFishingBobberPhysics OldCombatSettings matches 1 as @e[type=fishing_bobber] at @s run {
        execute if block ~ ~-0.25 ~ water run return 0
        execute if block ~ ~ ~ water run return 0
        execute if block ~ ~-0.25 ~ kelp run return 0
        execute if block ~ ~-0.25 ~ seagrass run return 0
        execute if block ~ ~-0.25 ~ #corals run return 0
        execute if block ~ ~ ~ kelp run return 0
        execute if block ~ ~ ~ seagrass run return 0
        execute if block ~ ~ ~ #corals run return 0
        execute store result score y OldCombatTemp run data get entity @s Pos[1] 1000
        execute store result score yv OldCombatTemp run data get entity @s Motion[1] 1000
        execute store result entity @s Motion[1] double 0.001 run scoreboard players operation yv OldCombatTemp -= FishingBobberGravity OldCombatSettings
    }
    
}

function old_fishing_bobber_velocity {
    execute if score OldFishingBobberVel OldCombatSettings matches 1 as @e[type=fishing_bobber,tag=!ofbv.processed] run {
        tag @s add this
        execute on origin run tag @s add origin
        execute on origin at @s run block {
            execute store result score IsCenterForceLoaded OldCombatTemp run forceload query 0 0
            execute unless score IsCenterForceLoaded OldCombatTemp matches 1 run forceload add 0 0
            execute positioned 0.0 0.0 0.0 rotated ~ ~ run summon marker ^ ^ ^1 {Tags:["vector"]}
            # tellraw @a {nbt:"Pos",entity:"@n[type=marker,tag=vector]"}
            execute store result score VecX OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[0] 1000
            execute store result score VecY OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[1] 1000
            execute store result score VecZ OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[2] 1000
            data modify storage oldcombat:temp vectors set from entity @n[tag=vector,type=marker] Pos
            kill @e[type=marker,tag=vector]
            execute unless score IsCenterForceLoaded OldCombatTemp matches 1 run forceload remove 0 0
        }
        execute on origin at @s anchored eyes positioned ^ ^ ^ as @n[tag=this] run tp @s ~ ~ ~
        execute store result entity @s Motion[0] double 0.001 run scoreboard players get VecX OldCombatTemp
        execute store result entity @s Motion[1] double 0.001 run scoreboard players get VecY OldCombatTemp
        execute store result entity @s Motion[2] double 0.001 run scoreboard players get VecZ OldCombatTemp
        
        tag @s remove this
        execute on origin run tag @s remove origin
        
    }
    execute as @e[type=fishing_bobber] run tag @s add ofbv.processed
}

function disable_vanilla_sharpness {
    execute if score OldSharpness OldCombatSettings matches 0 if score DisableSharpness OldCombatSettings matches 0 run return fail
    execute as @3 if items entity @s weapon.mainhand *[enchantments~[{enchantments:"sharpness"}]] run {
        execute if entity @s[type=player] store result score Sharpness OldCombatTemp run data get entity @s SelectedItem.components."minecraft:enchantments"."minecraft:sharpness" 50
        execute unless entity @s[type=player] store result score Sharpness OldCombatTemp run data get entity @s equipment.mainhand.components."minecraft:enchantments"."minecraft:sharpness" 50

        scoreboard players set Damage OldCombatTemp -50
        execute store result storage oldcombat:temp damage double 0.01 run scoreboard players operation Damage OldCombatTemp -= Sharpness OldCombatTemp
        block { with storage oldcombat:temp
            attribute @s attack_damage modifier remove oldcombat:disable_vanilla_sharp
            $attribute @s attack_damage modifier add oldcombat:disable_vanilla_sharp $(damage) add_value
        }
    } else execute as @3 run {
        attribute @s attack_damage modifier remove oldcombat:disable_vanilla_sharp
    }
}

function old_sharpness {
    execute if score OldSharpness OldCombatSettings matches 1 as @e unless entity @s[tag=oldcombatignore] if items entity @s weapon.mainhand *[enchantments~[{enchantments:"sharpness"}]] run {
        execute if entity @s[type=player] store result score Sharpness OldCombatTemp run data get entity @s SelectedItem.components."minecraft:enchantments"."minecraft:sharpness"
        execute unless entity @s[type=player] store result score Sharpness OldCombatTemp run data get entity @s equipment.mainhand.components."minecraft:enchantments"."minecraft:sharpness" 
        scoreboard players operation Boost OldCombatTemp = Sharpness OldCombatTemp
        scoreboard players operation Boost OldCombatTemp *= SharpnessBoost OldCombatSettings
        scoreboard players operation Boost OldCombatTemp += SharpnessBase OldCombatSettings
        execute store result storage oldcombat:temp boost double 0.01 run scoreboard players get Boost OldCombatTemp
        block { with storage oldcombat:temp
            attribute @s attack_damage modifier remove oldcombat:sharpness
            $attribute @s attack_damage modifier add oldcombat:sharpness $(boost) add_value
        }
    } else execute as @e run {
        attribute @s attack_damage modifier remove oldcombat:sharpness
    }
}

<%%
    player_inventory_slots = {
        "inventory.0":"Inventory[{Slot:9b}]",
        "inventory.1":"Inventory[{Slot:10b}]",
        "inventory.2":"Inventory[{Slot:11b}]",
        "inventory.3":"Inventory[{Slot:12b}]",
        "inventory.4":"Inventory[{Slot:13b}]",
        "inventory.5":"Inventory[{Slot:14b}]",
        "inventory.6":"Inventory[{Slot:15b}]",
        "inventory.7":"Inventory[{Slot:16b}]",
        "inventory.8":"Inventory[{Slot:17b}]",
        "inventory.9":"Inventory[{Slot:18b}]",
        "inventory.10":"Inventory[{Slot:19b}]",
        "inventory.11":"Inventory[{Slot:20b}]",
        "inventory.12":"Inventory[{Slot:21b}]",
        "inventory.13":"Inventory[{Slot:22b}]",
        "inventory.14":"Inventory[{Slot:23b}]",
        "inventory.15":"Inventory[{Slot:24b}]",
        "inventory.16":"Inventory[{Slot:25b}]",
        "inventory.17":"Inventory[{Slot:26b}]",
        "inventory.18":"Inventory[{Slot:27b}]",
        "inventory.19":"Inventory[{Slot:28b}]",
        "inventory.20":"Inventory[{Slot:29b}]",
        "inventory.21":"Inventory[{Slot:30b}]",
        "inventory.22":"Inventory[{Slot:31b}]",
        "inventory.23":"Inventory[{Slot:32b}]",
        "inventory.24":"Inventory[{Slot:33b}]",
        "inventory.25":"Inventory[{Slot:34b}]",
        "inventory.26":"Inventory[{Slot:35b}]",
        "armor.head":"equipment.head",
        "armor.chest":"equipment.chest",
        "armor.legs":"equipment.legs",
        "armor.feet":"equipment.feet",
        "hotbar.0":"Inventory[{Slot:0b}]",
        "hotbar.1":"Inventory[{Slot:1b}]",
        "hotbar.2":"Inventory[{Slot:2b}]",
        "hotbar.3":"Inventory[{Slot:3b}]",
        "hotbar.4":"Inventory[{Slot:4b}]",
        "hotbar.5":"Inventory[{Slot:5b}]",
        "hotbar.6":"Inventory[{Slot:6b}]",
        "hotbar.7":"Inventory[{Slot:7b}]",
        "hotbar.8":"Inventory[{Slot:8b}]",
    };
    modify_item_tooltip_slots = {
        "hotbar.0":"Inventory[{Slot:0b}]",
        "hotbar.1":"Inventory[{Slot:1b}]",
        "hotbar.2":"Inventory[{Slot:2b}]",
        "hotbar.3":"Inventory[{Slot:3b}]",
        "hotbar.4":"Inventory[{Slot:4b}]",
        "hotbar.5":"Inventory[{Slot:5b}]",
        "hotbar.6":"Inventory[{Slot:6b}]",
        "hotbar.7":"Inventory[{Slot:7b}]",
        "hotbar.8":"Inventory[{Slot:8b}]",
        "armor.head":"equipment.head",
        "armor.chest":"equipment.chest",
        "armor.legs":"equipment.legs",
        "armor.feet":"equipment.feet",
        "weapon.offhand":"equipment.offhand",
    }
%%>



function old_tooltip {
    
    
    execute if score ApplyToolTipToAll OldCombatSettings matches 0 as @a run {
        
    REPEAT (modify_item_tooltip_slots) as id, path {
            execute if items entity @s <%id%> *[minecraft:attribute_modifiers~{modifiers:{contains:[{attribute:"attack_damage"}]}}] run {
                <%%
                    slot = id
                    data = '{"minecraft:lore":["",{text:"+$(tooldmg) Attack Damage",italic:false,color:blue}],"minecraft:tooltip_display":{hidden_components:["attribute_modifiers"]}}'
                %%>

                execute if score OldTooltips OldCombatSettings matches 1 run {
                execute store result storage oldcombat:temp tooldmg double 0.01 run {
                    data modify storage oldcombat:temp toolid set from entity @s <%path%>.id
                    return run block { with storage oldcombat:temp                    
                        $execute if score OldToolDamage OldCombatSettings matches 1 store result score Damage OldCombatTemp run data get storage oldcombat:data damages.old.$(toolid) 100
                        $execute if score OldToolDamage OldCombatSettings matches 0 store result score Damage OldCombatTemp run data get storage oldcombat:data damages.new.$(toolid) 100
                        execute if items entity @s <%slot%> *[enchantments~[{enchantments:"sharpness"}]] run {
                            execute if score OldSharpness OldCombatSettings matches 1 run {
                                execute store result score Sharpness OldCombatTemp run data get entity @s <%path%>.components."minecraft:enchantments"."minecraft:sharpness"
                                scoreboard players operation Boost OldCombatTemp = Sharpness OldCombatTemp
                                scoreboard players operation Boost OldCombatTemp *= SharpnessBoost OldCombatSettings
                                scoreboard players operation Boost OldCombatTemp += SharpnessBase OldCombatSettings
                                scoreboard players operation Damage OldCombatTemp += Boost OldCombatTemp
                            } else execute run {
                                    execute store result score Sharpness OldCombatTemp run data get entity @s <%path%>.components."minecraft:enchantments"."minecraft:sharpness" 50
                                    
                                    scoreboard players add Damage OldCombatTemp 50
                                    scoreboard players operation Damage OldCombatTemp += Sharpness OldCombatTemp

                            }
                        }
                        return run scoreboard players get Damage OldCombatTemp
                    }
                }
                block { with storage oldcombat:temp
                    summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
                    item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s <%slot%>
                    $data modify entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components merge value <%data%>
                    item replace entity @s <%slot%> from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
                    kill @e[type=armor_stand,tag=modify_slot]
                }
                } else execute run {
                    summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
                    item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s <%slot%>
                    data remove entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components."minecraft:lore"
                    data remove entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components."minecraft:tooltip_display".hidden_components
                    item replace entity @s <%slot%> from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
                    kill @e[type=armor_stand,tag=modify_slot]

                }
            }
        }
    } else execute as @a run {
            REPEAT (player_inventory_slots) as id, path {
            execute if items entity @s <%id%> *[minecraft:attribute_modifiers~{modifiers:{contains:[{attribute:"attack_damage"}]}}] run {
                <%%
                    slot = id
                    data = '{"minecraft:lore":["",{text:"+$(tooldmg) Attack Damage",italic:false,color:blue}],"minecraft:tooltip_display":{hidden_components:["attribute_modifiers"]}}'
                %%>

                execute if score OldTooltips OldCombatSettings matches 1 run {
                execute store result storage oldcombat:temp tooldmg double 0.01 run {
                    data modify storage oldcombat:temp toolid set from entity @s <%path%>.id
                    return run block { with storage oldcombat:temp                    
                        $execute if score OldToolDamage OldCombatSettings matches 1 store result score Damage OldCombatTemp run data get storage oldcombat:data damages.old.$(toolid) 100
                        $execute if score OldToolDamage OldCombatSettings matches 0 store result score Damage OldCombatTemp run data get storage oldcombat:data damages.new.$(toolid) 100
                        execute if items entity @s <%slot%> *[enchantments~[{enchantments:"sharpness"}]] run {
                            execute if score OldSharpness OldCombatSettings matches 1 run {
                                execute store result score Sharpness OldCombatTemp run data get entity @s <%path%>.components."minecraft:enchantments"."minecraft:sharpness"
                                scoreboard players operation Boost OldCombatTemp = Sharpness OldCombatTemp
                                scoreboard players operation Boost OldCombatTemp *= SharpnessBoost OldCombatSettings
                                scoreboard players operation Boost OldCombatTemp += SharpnessBase OldCombatSettings
                                scoreboard players operation Damage OldCombatTemp += Boost OldCombatTemp
                            } else execute run {
                                    execute store result score Sharpness OldCombatTemp run data get entity @s <%path%>.components."minecraft:enchantments"."minecraft:sharpness" 50
                                    scoreboard players add Damage OldCombatTemp 50
                                    scoreboard players operation Damage OldCombatTemp += Sharpness OldCombatTemp

                            }
                            
                        }
                        return run scoreboard players get Damage OldCombatTemp
                    }
                }
                block { with storage oldcombat:temp
                    summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
                    item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s <%slot%>
                    $data modify entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components merge value <%data%>
                    item replace entity @s <%slot%> from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
                    kill @e[type=armor_stand,tag=modify_slot]
                }
                } else execute run {
                    summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
                    item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s <%slot%>
                    data remove entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components."minecraft:lore"
                    data remove entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components."minecraft:tooltip_display".hidden_components
                    item replace entity @s <%slot%> from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
                    kill @e[type=armor_stand,tag=modify_slot]

                }
            }
        }

    }
}


damage_type fishing_bobber {
    "message_id":"generic",
    "exhaustion":0.1,
    "scaling":"never"
}



function detect_aputils {
    execute store result score aputils OldCombatTemp run aputils heartbeat
    execute store result score aputilsver OldCombatTemp run aputils loader
    return run aputils loader
}

function fishing_rod_kb {
    execute if score FishingRodKnockback OldCombatSettings matches 1 run {
        execute as @e[type=fishing_bobber,tag=!hit,tag=!oldcombatignore,nbt=!{OnGround:1b}] at @s run {
            execute on origin if entity @s[tag=oldcombatignore] run return fail
            execute on origin run tag @s add origin
            tag @s add this
            REPEAT (0,2,1) as i {
                data modify storage oldcombat:temp <%vector_names[i]%> set from entity @s Pos[<%i%>]
            }
            
            execute as @n[type=!fishing_bobber,type=!marker,tag=!origin,type=!item,type=!item_frame,type=!painting,type=!experience_orb] if entity @s[dx=0,dy=0,dz=0] run {
                tag @n[type=fishing_bobber,tag=this] add hit
                damage @s 0.001 mob_projectile by @p[tag=origin]
                tag @s[nbt={OnGround:1b}] add tempIgnoreAirKB
            }
            tag @a remove origin
            tag @e[type=fishing_bobber] remove this
        }
    }
}

function enforce_locked_settings {
    execute if score DisableSprint OldCombatSettings matches 1 run scoreboard players set SprintingCrits OldCombatSettings 0
    IF ($1_21_4compile) {
        scoreboard players set SwordBlocking OldCombatSettings 0
        scoreboard players set ShieldNerf OldCombatSettings 0
        scoreboard players set SprintingCrits OldCombatSettings 0
    }
}

function further_fishing_bobber {
    $execute as @e[type=fishing_bobber,tag=!processed,tag=!oldcombatignore] run { {distx:$(distx), disty:$(disty)}
        execute on origin if entity @s[tag=oldcombatignore] run return fail
        tag @s add processed
        tag @s add this
        REPEAT (0,2,1) as i {
            $execute if score FurtherFishingBobber OldCombatSettings matches 1 store result entity @s Motion[<%i%>] double 0.01 run data get entity @s Motion[<%i%>] $(dist<%i != 1 ? "x" : "y"%>)
        }
        tag @s remove this
    }
}

function config {
    function ./config/page1
}
dir config {
    function page1 {
        IF $1_21_4compile==true {
            tellraw @s "Old Combat Configuration"
            boolean_input legacy <%"Sword Blocking"%> <%"If true, allows blocking using a sword. Sword blocking halves the damage taken for most damage types. Disabled because you're using 1.21.4."%> OldCombatSettings SwordBlocking disabled true 
            boolean_input legacy <%"Disable Offhand Slot"%> <%"If true, completely disables the offhand slot. Any items in the offhand slot when this is true will be dropped on the ground."%> OldCombatSettings DisableOffhand oldcombat:config oldcombat:config/subconfig/offhand
            boolean_input legacy <%"Disable Attack Cooldown"%> <%"If true, completely disables the attack cooldown mechanic."%> OldCombatSettings DisableAttackCooldown oldcombat:config
            boolean_input legacy <%"Old Tool Damages"%> <%"If true, tools (mainly axes) will do their pre-1.9 attack damage. Note: the attack damage tooltip on the tool will still show the normal amount, but the tool will deal the old amount of damage."%> OldCombatSettings OldToolDamage oldcombat:config
            boolean_input legacy <%"Allow Critical Hits While Sprinting"%> <%"Enables getting critical hits while sprinting. After the combat update, you can no longer get a critical hit for your first hit during a sprint, you would just do a knockback attack instead. This setting, if true, allows players to crit for that first hit. This doesn't stop the knockback attack from happening, though, so you can get a crit and knockback attack at the same time. Due to technical restrictions, the critical hit will happen one tick after the player attacks a mob. Technical restrictions prevent the hitting a mob detection from happening on the same tick the attack happens. See https://modrinth.com/datapack/sprinting-crits for more about this mechanic."%> OldCombatSettings SprintingCrits disabled condition <%"if score DisableSprint OldCombatSettings matches 1"%> oldcombat:config
            boolean_input legacy <%"Disable Sprinting"%> <%"WARNING: This feature is deprecated and will soon be removed in favor of the b1.7.3 hunger system which does the same thing but better. NOTICE: This doesn't prevent certain sprinting-related actions from happening, such as knockback attacks, the exhaustion from sprinting, the sprint-jump speed-boost, etc. This tweak only removes the attribute modifier (minecraft:sprinting) that increases your speed while sprinting. This will, however, prevent the sprinting-crits setting from working since it relies on this attribute modifier being applied to detect sprinting"%> OldCombatSettings DisableSprint oldcombat:config
            boolean_input legacy <%"Disable Knockback Resistance"%> <%"Removes all forms of knockback resistance such as the partial knockback resistance provided by netherite armor, the full knockback resistance iron golems and wardens have, etc."%> OldCombatSettings DisableKBResist oldcombat:config
            boolean_input legacy <%"Knockback Effective In Air"%> <%"NOTICE: This will NOT apply to players, UNLESS you have Andrew's Datapack Utils Fabric mod installed. Makes knockback from attacks as effective in the air as it is on the ground."%> OldCombatSettings AirKB oldcombat:config oldcombat:config/subconfig/airkb
            boolean_input legacy <%"Fishing Rod Knockback"%> <%"Makes fishing rod bobbers do knockback by applying 0.01 damage to entities hit by the bobber. Note: The damage and knockback will apply 1 tick after the fishing rod attaches to the entity. This is a technical restriction that is hard to work around."%> OldCombatSettings FishingRodKnockback oldcombat:config
            boolean_input legacy <%"Fishing Bobbers Go Further"%> <%"Makes fishing rod bobbers go further when launched from a fishing rod by multiplying the bobber's velocity by a certain amount. This isn't that accurate to pre-combat update physics as that would be hard to make. Note: The velocity change happens 1 tick after the fishing bobber entity is created, causing the fishing bobber to go at the vanilla speed for 1 tick. This is a technical restriction that is hard to work around."%> OldCombatSettings FurtherFishingBobber oldcombat:config oldcombat:config/subconfig/fishingrodboost
            boolean_input legacy <%"Old Regeneration"%> <%"NOTICE: Doesn't work without Andrew's DataPack Lib (a Fabric mod that you can find on Modrinth) in order to modify player data. Makes health regeneration work like it did before the combat update, where you regain half a heart every 4 seconds, and having saturation left doesn't speed it up."%> OldCombatSettings OldRegen disabled condition <%"unless score aputils OldCombatTemp matches 1"%> oldcombat:config oldcombat:config/subconfig/oldregen
            boolean_input legacy <%"Increase Damage Knockback"%> <%"Increases the knockback applied to mobs that take damage. Requires Andrew's Pack Utilities to affect players."%> OldCombatSettings BuffKB oldcombat:config oldcombat:config/subconfig/knockback
            submenu legacy <%"Disabling items"%> <%"Some tweaks for disabling various items."%> oldcombat:config/subconfig/itemdisable
            boolean_input legacy <%"Nerf Shields"%> <%"Makes Shields block 66% of incoming melee damage like they did before 1.11. Damage from projectiles such as arrows are still completely blocked, because they were completely blocked before 1.11. You still take knockback from projectiles for unknown reasons. Disabled because you're using 1.21.4."%> OldCombatSettings ShieldNerf disabled true 
            boolean_input legacy <%"Disable Attack Sounds"%> <%"\\\"Disables\\\" attack sounds such as sweep attack, critical attack, knockback attack, etc. Not perfect, sounds will still play for 1 tick before being cancelled. However, this imperfection is usually masked out by other ongoing sounds, like a mob or player taking damage, so it doesn't really have to be perfect. However, the cutoff is very noticable when spam-clicking, and there are some other imperfections, so this setting isn't defaulted to on."%> OldCombatSettings DisableAttackSounds <%"oldcombat:config/page1"%>
            boolean_input legacy <%"Disable Swimming"%> <%"Sets the player's hunger to 1/2 a bar while they're in water to effectively disable 1.13's swimming. Disables natural health regeneration when in water if Old Health Regeneration is off. Note: Saturation gain from eating and the Saturation effect is limited to 6 hunger points a tick for technical restrictions, so food like golden carrots are less effective."%> OldCombatSettings DisableSwimming disabled condition <%"unless score aputils OldCombatTemp matches 1"%> <%"oldcombat:config/page1"%>
            boolean_input legacy <%"Old Sharpness Damage"%> <%"Boosts sharpness to its old power, 1.25 damage per level."%> OldCombatSettings OldSharpness <%"oldcombat:config/page1"%> oldcombat:config/subconfig/sharpness
            boolean_input legacy <%"Old Tooltips"%> <%"Reverts the held item tooltip to the tooltip from 1.8. Changes with the states of Old Tool Damages and Old Sharpness to reflect their changes."%> OldCombatSettings OldTooltips oldcombat:config/page1 oldcombat:config/subconfig/tooltips
            pagebar legacy 2 <%"oldcombat:config"%>
        } ELSE {
            tellraw @s "Old Combat Configuration"
            boolean_input <%"Sword Blocking"%> <%"If true, allows blocking using a sword. Sword blocking halves the damage taken for most damage types."%> OldCombatSettings SwordBlocking oldcombat:config
            boolean_input <%"Disable Offhand Slot"%> <%"If true, completely disables the offhand slot. Any items in the offhand slot when this is true will be dropped on the ground."%> OldCombatSettings DisableOffhand oldcombat:config oldcombat:config/subconfig/offhand
            boolean_input <%"Disable Attack Cooldown"%> <%"If true, completely disables the attack cooldown mechanic."%> OldCombatSettings DisableAttackCooldown oldcombat:config
            boolean_input <%"Old Tool Damages"%> <%"If true, tools (mainly axes) will do their pre-1.9 attack damage. Note: the attack damage tooltip on the tool will still show the normal amount, but the tool will deal the old amount of damage."%> OldCombatSettings OldToolDamage oldcombat:config
            boolean_input <%"Allow Critical Hits While Sprinting"%> <%"Enables getting critical hits while sprinting. After the combat update, you can no longer get a critical hit for your first hit during a sprint, you would just do a knockback attack instead. This setting, if true, allows players to crit for that first hit. This doesn't stop the knockback attack from happening, though, so you can get a crit and knockback attack at the same time. Due to technical restrictions, the critical hit will happen one tick after the player attacks a mob. Technical restrictions prevent the hitting a mob detection from happening on the same tick the attack happens.  Direct port of my Sprinting Crits datapack, with better detection if Andrew's Datapack Utilities is installed. See https://modrinth.com/datapack/sprinting-crits for more about this mechanic."%> OldCombatSettings SprintingCrits disabled condition <%"if score DisableSprint OldCombatSettings matches 1"%> oldcombat:config
            boolean_input <%"Disable Sprinting"%> <%"WARNING: This feature is deprecated and will soon be removed in favor of the b1.7.3 hunger system which does the same thing but better. NOTICE: This doesn't prevent certain sprinting-related actions from happening, such as knockback attacks, the exhaustion from sprinting, the sprint-jump speed-boost, etc. This tweak only removes the attribute modifier (minecraft:sprinting) that increases your speed while sprinting. This will, however, prevent the sprinting-crits setting from working since it relies on this attribute modifier being applied to detect sprinting"%> OldCombatSettings DisableSprint oldcombat:config
            boolean_input <%"Disable Knockback Resistance"%> <%"Removes all forms of knockback resistance such as the partial knockback resistance provided by netherite armor, the full knockback resistance iron golems and wardens have, etc."%> OldCombatSettings DisableKBResist oldcombat:config
            boolean_input <%"Knockback Effective In Air"%> <%"NOTICE: This will NOT apply to players, UNLESS you have Andrew's Datapack Utilities, which is my Fabric mod, installed. Makes knockback from attacks as effective in the air as it is on the ground."%> OldCombatSettings AirKB oldcombat:config oldcombat:config/subconfig/airkb
            boolean_input <%"Fishing Rod Knockback"%> <%"Makes fishing rod bobbers do knockback by applying 0.01 damage to entities hit by the bobber. Note: The damage and knockback will apply 1 tick after the fishing rod attaches to the entity. This is a technical restriction that is hard to work around."%> OldCombatSettings FishingRodKnockback oldcombat:config
            boolean_input <%"Fishing Bobbers Go Further"%> <%"Makes fishing rod bobbers go further when launched from a fishing rod by multiplying the bobber's velocity by a certain amount. This isn't that accurate to pre-combat update physics as that would be hard to make. Note: The velocity change happens 1 tick after the fishing bobber entity is created, causing the fishing bobber to go at the vanilla speed for 1 tick. This is a technical restriction that is hard to work around."%> OldCombatSettings FurtherFishingBobber oldcombat:config oldcombat:config/subconfig/fishingrodboost
            boolean_input <%"Old Regeneration"%> <%"NOTICE: Doesn't work without Andrew's DataPack Lib (a Fabric, soon to be NeoForge as well, mod that you can find on Modrinth) in order to modify player data. Makes health regeneration work like it did before the combat update, where you regain half a heart every 4 seconds, and having saturation left doesn't speed it up."%> OldCombatSettings OldRegen disabled condition <%"unless score aputils OldCombatTemp matches 1"%> oldcombat:config oldcombat:config/subconfig/oldregen
            boolean_input <%"Increase Damage Knockback"%> <%"Increases the knockback applied to mobs that take damage. Requires Andrew's Pack Utilities to affect players."%> OldCombatSettings BuffKB oldcombat:config oldcombat:config/subconfig/knockback
            submenu <%"Disabling items"%> <%"Some tweaks for disabling various items."%> oldcombat:config/subconfig/itemdisable
            boolean_input <%"Nerf Shields"%> <%"Makes Shields block 66% of incoming melee damage like they did before 1.11. Damage from projectiles such as arrows are still completely blocked, because they were completely blocked before 1.11. You still take knockback from projectiles for unknown reasons."%> OldCombatSettings ShieldNerf <%"oldcombat:config/page1"%>
            boolean_input <%"Disable Attack Sounds"%> <%"\\\"Disables\\\" attack sounds such as sweep attack, critical attack, knockback attack, etc. Not perfect, sounds will still play for 1 tick before being cancelled. However, this imperfection is usually masked out by other ongoing sounds, like a mob or player taking damage, so it doesn't really have to be perfect. However, the cutoff is very noticable when spam-clicking, and there are some other imperfections, so this setting isn't defaulted to on."%> OldCombatSettings DisableAttackSounds <%"oldcombat:config/page1"%>
            boolean_input <%"Disable Swimming"%> <%"Requires Andrew's Datapack Utilities. Sets the player's food level to 1/2 a bar while they're in water to effectively disable 1.13's swimming. Don't worry, the food level gets restored upon leaving the water, and all changes that would have been made to the food level will be reflected once you leave the water. Disables natural health regeneration when in water if Old Health Regeneration is off."%> OldCombatSettings DisableSwimming disabled condition <%"unless score aputils OldCombatTemp matches 1"%> <%"oldcombat:config/page1"%>
            boolean_input <%"Old Sharpness Damage"%> <%"Boosts sharpness to its old power, 1.25 damage per level."%> OldCombatSettings OldSharpness oldcombat:config/page1 oldcombat:config/subconfig/sharpness
            boolean_input <%"Old Tooltips"%> <%"Reverts the held item tooltip to the tooltip from 1.8. Changes with the states of Old Tool Damages and Old Sharpness to reflect their changes."%> OldCombatSettings OldTooltips oldcombat:config/page1 oldcombat:config/subconfig/tooltips
            pagebar 2 <%"oldcombat:config"%>
        }
    }
    function page2 {
        IF $1_21_4compile==true {
            tellraw @s "Old Combat Configuration"
            boolean_input legacy <%"Bedrock Fishing Bobber Physics"%> <%"Makes fishing rod bobbers have their physics from Bedrock Edition. Note: the physics are weird and have a couple issues."%> OldCombatSettings BedrockFishingBobberPhysics oldcombat:config/page2
            boolean_input legacy <%"Old Fishing Bobber Velocity"%> <%"WARNING: This setting is known to bug out for unknown reasons at random times in different ways. It is unknown why this happens but it is most likely a Minecraft bug because my code is completely fine. Makes fishing rod bobbers have their old velocity calculations when thrown, where the bobber will go in your looking direction correctly instead of acting weird when you look more towards up or down. Note: this setting makes fishing bobbers not move for 1 tick when they spawn as to get the correct positioning."%> OldCombatSettings OldFishingBobberVel oldcombat:config/page2
            boolean_input legacy <%"Beta 1.7.3 and older Hunger System"%> <%"Requires Andrew's Datapack Utilities. Removes hunger and sprinting (except in creative and spectator), making food restore health instead of hunger. When this is on, you'll notice that your hunger bar is completely empty. Do not worry, you won't take starvation damage. Eating food will restore the same amount of health as it would hunger normally. Hunger effect is disabled as it does nothing with this setting on, effectively making any food that normally applies/has a chance to apply the hunger effect completely safe to eat."%> OldCombatSettings OldHungerSystem oldcombat:config/page2
            boolean_input legacy <%"Disable Food Stacking & Instant Eating"%> <%"Disables every food/drink item's ability to stack, and makes eating/drinking instant, like in Beta 1.7.3 and older. Any food item that has more than 1 in a stack when it enters your main/off hand will be split into stacks of 1 in your inventory (if your inventory can't fit all of them the excess food will drop on the ground at your feet)."%> OldCombatSettings OldFood oldcombat:config/page2
            boolean_input legacy <%"Old Mob AI"%> <%"WARNING: Unfinished, has a couple bugs. Makes mobs have their AI from before 1.2.1, where they generally follow a two-step rule: 1. Go towards target in straight line regardless of any ledges or any blocks in the way, and 2. if there is a block in front of you, try to jump regardless of if there is a block above or if it is too tall to jump up onto. Creepers also strafe around the player in circles instead of standing still while exploding like they did before 1.2.1. Skeletons (and its variants) no longer strafe from side to side when attacking its target, like they didn't before 1.9. Currently only affects mobs when they are actively targeting something, otherwise they use normal idle ai. Reverting the wander system of mobs that aren't targeting an entity can cause some server lag, so you can disable it in the subconfig of this option."%> OldCombatSettings OldMobAI oldcombat:config/page2 oldcombat:config/subconfig/oldai
            boolean_input legacy <%"Mobs see further"%> <%"Makes mobs see 400% as far as they normally would. Not related to any old game version, just a utility. Useful for minigames."%> OldCombatSettings MobFarSight oldcombat:config/page2
            boolean_input legacy <%"Disable Critical Hit"%> <%"Disables the critical hit damage boost and sound(-ish). Note: Doesn't get rid of the crit particles."%> OldCombatSettings DisableCrits oldcombat:config/page2
            emptyline 11
            pagebar legacy 2 <%"oldcombat:config"%>
        } ELSE {
            tellraw @s "Old Combat Configuration"
            boolean_input <%"Bedrock Fishing Bobber Physics"%> <%"Makes fishing rod bobbers have their physics from Bedrock Edition. Note: the physics are weird and have a couple issues."%> OldCombatSettings BedrockFishingBobberPhysics oldcombat:config/page2
            boolean_input <%"Old Fishing Bobber Velocity"%> <%"WARNING: This setting is known to bug out for unknown reasons at random times in different ways. It is unknown why this happens but it is most likely a Minecraft bug because my code is completely fine. Makes fishing rod bobbers have their old velocity calculations when thrown, where the bobber will go in your looking direction correctly instead of acting weird when you look more towards up or down. Note: this setting makes fishing bobbers not move for 1 tick when they spawn as to get the correct positioning. "%> OldCombatSettings OldFishingBobberVel oldcombat:config/page2
            boolean_input <%"Beta 1.7.3 and older Hunger System"%> <%"Requires Andrew's Datapack Utilities. Removes hunger and sprinting (except in creative and spectator), making food restore health instead of hunger. When this is on, you'll notice that your hunger bar is completely empty. Do not worry, you won't take starvation damage. Eating food will restore the same amount of health as it would hunger normally. Hunger effect is disabled as it does nothing with this setting on, effectively making any food that normally applies/has a chance to apply the hunger effect completely safe to eat."%> OldCombatSettings OldHungerSystem oldcombat:config/page2
            boolean_input <%"Disable Food Stacking & Instant Eating"%> <%"Disables every food/drink item's ability to stack, and makes eating/drinking instant, like in Beta 1.7.3 and older. Any food item that has more than 1 in a stack when it enters your main/off hand will be split into stacks of 1 in your inventory (if your inventory can't fit all of them the excess food will drop on the ground at your feet)."%> OldCombatSettings OldFood oldcombat:config/page2
            boolean_input <%"Old Mob AI"%> <%"WARNING: Unfinished, has a couple bugs. Makes mobs have their AI from before 1.2.1, where they generally follow a two-step rule: 1. Go towards target in straight line regardless of any ledges or any blocks in the way, and 2. if there is a block in front of you, try to jump regardless of if there is a block above or if it is too tall to jump up onto. Creepers also strafe around the player in circles instead of standing still while exploding like they did before 1.2.1. Skeletons (and its variants) no longer strafe from side to side when attacking its target, like they didn't before 1.9. Currently only affects mobs when they are actively targeting something, otherwise they use normal idle ai. Reverting the wander system of mobs that aren't targeting an entity can cause some server lag, so you can disable it in the subconfig of this option."%> OldCombatSettings OldMobAI oldcombat:config/page2 oldcombat:config/subconfig/oldai
            boolean_input <%"Mobs see further"%> <%"Makes mobs see 400% as far as they normally would. Not related to any old game version, just a utility. Useful for minigames."%> OldCombatSettings MobFarSight oldcombat:config/page2
            boolean_input <%"Disable Critical Hit"%> <%"Disables the critical hit damage boost and sound(-ish). Note: Doesn't get rid of the crit particles."%> OldCombatSettings DisableCrits oldcombat:config/page2
            emptyline 11
            pagebar 2 <%"oldcombat:config"%>
        }
    }
    dir subconfig {
        function airkb {
            IF $1_21_4compile==true {
                textline "Sub-configuration for Knockback Effective In Air"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                textline {"text":"IMPORTANT (See tooltip)","hoverEvent":{"action":"show_text","value":"When this screen refers to 'velocity', it actually means only the entity's vertical velocity, NOT horizontal."}}
                numeric_input legacy <%"Air Knockback Strength"%> <%"Amount of vertical knockback applied to entities in the air by the above setting, in centimeters per tick. For reference, 1 cubic meter = 1 minecraft block, 100 cm = 1 meter, 20 ticks in 1 second."%> OldCombatSettings AirKBForce 10 oldcombat:config/subconfig/airkb
                numeric_input legacy <%"Air Knockback Mix Amount"%> <%"Mix amount for the knockback, mixing the above value with the current velocity. A value of 0 means no mixing will happen and the entity's velocity won't change, a value of 100 means the entity's velocity will get set to the Air Knockback Strength. A value of 50 means the entity's velocity will get set to the value in the middle of the entity's current velocity and the Air Knockback Strength. Weird (and cool) effects happen above 100 and below 0. Values slightly above 100 are good for compensating the 1-tick delay between an entity taking damage and the air knockback applying."%> OldCombatSettings AirKBMix 5 oldcombat:config/subconfig/airkb
                emptyline 14
            } ELSE {
                textline "Sub-configuration for Knockback Effective In Air"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                textline {text:"IMPORTANT (See tooltip)",hover_event:{action:show_text,value:"When this screen refers to 'velocity', it actually means only the entity's vertical velocity, NOT horizontal."}}
                numeric_input <%"Air Knockback Strength"%> <%"Amount of vertical knockback applied to entities in the air by the above setting, in centimeters per tick. For reference, 1 cubic meter = 1 minecraft block, 100 cm = 1 meter, 20 ticks in 1 second."%> OldCombatSettings AirKBForce 10 oldcombat:config/subconfig/airkb
                numeric_input <%"Air Knockback Mix Amount"%> <%"Mix amount for the knockback, mixing the above value with the current velocity. A value of 0 means no mixing will happen and the entity's velocity won't change, a value of 100 means the entity's velocity will get set to the Air Knockback Strength. A value of 50 means the entity's velocity will get set to the value in the middle of the entity's current velocity and the Air Knockback Strength. Weird (and cool) effects happen above 100 and below 0. Values slightly above 100 are good for compensating the 1-tick delay between an entity taking damage and the air knockback applying."%> OldCombatSettings AirKBMix 5 oldcombat:config/subconfig/airkb
                emptyline 15
            }
        }

        function fishingrodboost {
            IF $1_21_4compile==true {
                textline "Configuration for Fishing Bobbers Go Further"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input legacy <%"Horizontal Boost"%> <%"Horizontal Vector (Default 150)"%> OldCombatSettings FishingBobberBoost.X 10 oldcombat:config/subconfig/fishingrodboost
                numeric_input legacy <%"Vertical Boost"%> <%"Vertical Vector (Default 100)"%> OldCombatSettings FishingBobberBoost.Y 10 oldcombat:config/subconfig/fishingrodboost
                emptyline 16
            } ELSE {
                textline "Configuration for Fishing Bobbers Go Further"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input <%"Horizontal Boost"%> <%"Horizontal Vector (Default 150)"%> OldCombatSettings FishingBobberBoost.X 10 oldcombat:config/subconfig/fishingrodboost
                numeric_input <%"Vertical Boost"%> <%"Vertical Vector (Default 100)"%> OldCombatSettings FishingBobberBoost.Y 10 oldcombat:config/subconfig/fishingrodboost
                emptyline 16
            }

        }
        function oldregen {
            IF $1_21_4compile==true {
                textline "Sub-configuration for Old Regeneration"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input legacy <%"Regeneration Delay"%> <%"The delay between each half heart regenerating, in ticks."%> OldCombatSettings regenRate 10 oldcombat:config/subconfig/oldregen
                numeric_input legacy <%"Regeneration Exhaustion"%> <%"Exhaustion gain from regenerating health. 300 is 1.8's default, 400 is 1.9, 600 is 1.11."%> OldCombatSettings RegenExhaustion 10 oldcombat:config/subconfig/oldregen
                emptyline 16
            } ELSE {
                textline "Sub-configuration for Old Regeneration"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input <%"Regeneration Delay"%> <%"The delay between each half heart regenerating, in ticks."%> OldCombatSettings regenRate 10 oldcombat:config/subconfig/oldregen
                numeric_input <%"Regeneration Exhaustion"%> <%"Exhaustion gain from regenerating health. 300 is 1.8's default, 400 is 1.9, 600 is 1.11."%> OldCombatSettings RegenExhaustion 10 oldcombat:config/subconfig/oldregen
                emptyline 16
            }
        }
        function itemdisable {
            IF $1_21_4compile==true {
                textline "Configuration for disabling items"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input legacy <%"Disable Modern PVP Items"%> <%"Disables modern PVP items like crossbows, tipped arrows, maces, tridents, etc, by removing them when the player has them."%> OldCombatSettings DisableModernPVPItems oldcombat:config/subconfig/itemdisable
                boolean_input legacy <%"Disable Netherite Items"%> <%"Disables netherite items. Fun fact: this will downgrade the netherite ingot from your netherite item all the way down to ancient debris in multiple steps"%> OldCombatSettings DisableNetheriteItems oldcombat:config/subconfig/itemdisable
                boolean_input legacy <%"Break Disabled Items"%> <%"Causes some disabled items to \\\"break\\\" (as if their durability was 0). Purely visual."%> OldCombatSettings BreakDisabledTools oldcombat:config/subconfig/itemdisable
                boolean_input legacy <%"Drop Crafting Materials For Disabled Items"%> <%"Most disabled items will drop the materials from their crafting recipe. Doesn't apply to any items that either don't have a crafting recipe or would create a dupe glitch because multiple of the item are created from the recipe."%> OldCombatSettings ReturnMaterialsOfDisabledItems oldcombat:config/subconfig/itemdisable
                emptyline 14
            } ELSE {
                textline "Configuration for disabling items"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input <%"Disable Modern PVP Items"%> <%"Disables modern PVP items like crossbows, tipped arrows, maces, tridents, etc, by removing them when the player has them."%> OldCombatSettings DisableModernPVPItems oldcombat:config/subconfig/itemdisable
                boolean_input <%"Disable Netherite Items"%> <%"Disables netherite items. Fun fact: this will downgrade the netherite ingot from your netherite item all the way down to ancient debris in multiple steps"%> OldCombatSettings DisableNetheriteItems oldcombat:config/subconfig/itemdisable
                boolean_input <%"Break Disabled Items"%> <%"Causes some disabled items to \\\"break\\\" (as if their durability was 0). Purely visual."%> OldCombatSettings BreakDisabledTools oldcombat:config/subconfig/itemdisable
                boolean_input <%"Drop Crafting Materials For Disabled Items"%> <%"Most disabled items will drop the materials from their crafting recipe. Doesn't apply to any items that either don't have a crafting recipe or would create a dupe glitch because multiple of the item are created from the recipe."%> OldCombatSettings ReturnMaterialsOfDisabledItems oldcombat:config/subconfig/itemdisable
                emptyline 14
            }
        }
        function knockback {
            IF $1_21_4compile==true {
                textline "Configuration for Increase Damage Knockback"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input legacy <%"Horizontal"%> <%"Horizontal knockback boost (Default 150)"%> OldCombatSettings BuffKBValue.X 5 oldcombat:config/subconfig/knockback
                numeric_input legacy <%"Vertical"%> <%"Vertical knockback boost (Default 105)"%> OldCombatSettings BuffKBValue.Y 5 oldcombat:config/subconfig/knockback
                boolean_input legacy <%"Buff Sprint-Knockback attacks"%> <%"Increases/Decreases the force of the knockback boost applied while sprinting."%> OldCombatSettings BuffSprintKB oldcombat:config/subconfig/knockback
                numeric_input legacy <%"Horizontal (Sprinting)"%> <%"Horizontal Knockback to apply while sprinting (Default 150)"%> OldCombatSettings BuffKBValueSprint.X 5 oldcombat:config/subconfig/knockback
                numeric_input legacy <%"Vertical (Sprinting)"%> <%"Vertical Knockback to apply while sprinting (Default 150)"%> OldCombatSettings BuffKBValueSprint.Y 5 oldcombat:config/subconfig/knockback
                emptyline 13
            } ELSE {
                textline "Configuration for Increase Damage Knockback"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input <%"Horizontal"%> <%"Horizontal knockback boost (Default 150)"%> OldCombatSettings BuffKBValue.X 5 oldcombat:config/subconfig/knockback
                numeric_input <%"Vertical"%> <%"Vertical knockback boost (Default 105)"%> OldCombatSettings BuffKBValue.Y 5 oldcombat:config/subconfig/knockback
                boolean_input <%"Buff Sprint-Knockback attacks"%> <%"Increases/Decreases the force of the knockback boost applied while sprinting."%> OldCombatSettings BuffSprintKB oldcombat:config/subconfig/knockback
                numeric_input <%"Horizontal (Sprinting)"%> <%"Horizontal Knockback to apply while sprinting (Default 150)"%> OldCombatSettings BuffKBValueSprint.X 5 oldcombat:config/subconfig/knockback
                numeric_input <%"Vertical (Sprinting)"%> <%"Vertical Knockback to apply while sprinting (Default 150)"%> OldCombatSettings BuffKBValueSprint.Y 5 oldcombat:config/subconfig/knockback
                emptyline 13
            }

        }
        function sharpness {
            IF $1_21_4compile==true {
                textline "Configuration for Old Sharpness"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input legacy <%"Base Damage"%> <%"How much damage having sharpness at all deals extra. 100 = half a heart."%> OldCombatSettings SharpnessBase 5 oldcombat:config/subconfig/sharpness
                numeric_input legacy <%"Level Damage"%> <%"How much damage is dealt extra per level of sharpness. 100 = half a heart."%> OldCombatSettings SharpnessBoost 5 oldcombat:config/subconfig/sharpness
                emptyline 16
            } ELSE {
                textline "Configuration for Old Sharpness"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                numeric_input <%"Base Damage"%> <%"How much damage having sharpness at all deals extra. 100 = half a heart."%> OldCombatSettings SharpnessBase 5 oldcombat:config/subconfig/sharpness
                numeric_input <%"Level Damage"%> <%"How much damage is dealt extra per level of sharpness. 100 = half a heart."%> OldCombatSettings SharpnessBoost 5 oldcombat:config/subconfig/sharpness
                emptyline 16
            }
        }
        function tooltips {
            IF $1_21_4compile==true {
                textline "Configuration for Old Tooltips"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input legacy <%"Modify All Slots"%> <%"Scans all slots on a player when looking for tooltips to modify. A bit slower, but it ensures all tooltips are changed to the old one. If off, it only scans your hotbar, armor slots, offhand, and whatever you're grabbing with your cursor in an inventory."%> OldCombatSettings ApplyToolTipToAll oldcombat:config/subconfig/tooltips
                
                emptyline 17
            } ELSE {
                textline "Configuration for Old Tooltips"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input <%"Modify All Slots"%> <%"Scans all slots on a player when looking for tooltips to modify. A bit slower, but it ensures all tooltips are changed to the old one. If off, it only scans your hotbar, armor slots, offhand, and whatever you're grabbing with your cursor in an inventory."%> OldCombatSettings ApplyToolTipToAll oldcombat:config/subconfig/tooltips
                
                emptyline 17
            }
        }
        function offhand {
            IF $1_21_4compile==true {
                textline "Configuration for Disable Offhand"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input legacy <%"Allow Using Offhand For Certain Items"%> <%"Allows items that are in the #oldcombat:acceptable_offhand item tag to be placed in the offhand regardless of the state of Disable Offhand. By default the acceptable items are all the items that Bedrock Edition allows to be placed in the offhand."%> OldCombatSettings AllowOffhandForSomeItems oldcombat:config/subconfig/offhand
                
                emptyline 17
            } ELSE {
                textline "Configuration for Disable Offhand"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input <%"Allow Using Offhand For Certain Items"%> <%"Allows items that are in the #oldcombat:acceptable_offhand item tag to be placed in the offhand regardless of the state of Disable Offhand. By default the acceptable items are all the items that Bedrock Edition allows to be placed in the offhand."%> OldCombatSettings AllowOffhandForSomeItems oldcombat:config/subconfig/offhand
                
                emptyline 17
            }
        }

        function oldai {
            IF $1_21_4compile==true {
                textline "Configuration for Old Mob AI"
                single_button legacy <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input legacy <%"Enable Modification of Wandering"%> <%"Changes how mobs wander around to use their old wandering system, which doesn't use pathfinding."%> OldCombatSettings EnableWander oldcombat:config/subconfig/oldai
                
                emptyline 17
            } ELSE {
                textline "Configuration for Disable Offhand"
                single_button <%"Go back"%> white <%"/function oldcombat:config/page1"%>
                boolean_input <%"Enable Modification of Wandering"%> <%"Changes how mobs wander around to use their old wandering system, which doesn't use pathfinding."%> OldCombatSettings EnableWander oldcombat:config/subconfig/oldai
                
                emptyline 17
            }
        }


    }
    function quicksetup {
        function ./quicksetup/page1
    }
    dir quicksetup {
        function page1 {
            textline "Old Combat Quick Setup"
            emptyline
            textline "TODO"
        }
    }
}

advancement just_took_damage {
    "display":{"icon": {"id": "iron_sword"},"title": "Taken Damage","announce_to_chat": false,"description": "You took damage! Yayyyyy!!......","show_toast": true,"hidden": true},"criteria": {"hurt":{"trigger": "entity_hurt_player"}},"rewards":{"function":"oldcombat:on_damage"}
}

function on_damage {
    function buff_knockback
    function air_knockback
    # function responsive_kb
    advancement revoke @s only oldcombat:just_took_damage
}

dir presets {
    function b1.7.3 {
        scoreboard players set DisableOffhand OldCombatSettings 1
        scoreboard players set AllowOffhandForSomeItems OldCombatSettings 0
        scoreboard players set BuffKB OldCombatSettings 1
        scoreboard players set BuffKBValue.X OldCombatSettings 165
        scoreboard players set BuffKBValue.Y OldCombatSettings 125
        scoreboard players set DisableAttackCooldown OldCombatSettings 1
        scoreboard players set SwordBlocking OldCombatSettings 0
        scoreboard players set RegenExhaustion OldCombatSettings 300
        scoreboard players set OldToolDamage OldCombatSettings 1
        scoreboard players set SprintingCrits OldCombatSettings 1
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 1
        scoreboard players set AirKB OldCombatSettings 1
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 1
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set OldRegen OldCombatSettings 1
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 1
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 1
        scoreboard players set SharpnessBoost OldCombatSettings 125
        scoreboard players set SharpnessBase OldCombatSettings 0
        scoreboard players set OldMobAI OldCombatSettings 1
        scoreboard players set OldHungerSystem OldCombatSettings 1
        scoreboard players set OldFood OldCombatSettings 1
        scoreboard players set OldSharpness OldCombatSettings 1
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 1
        scoreboard players set OldTooltips OldCombatSettings 1
        scoreboard players set OldFishingBobberVel OldCombatSettings 1
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set FishingBobberGravity OldCombatSettings 50
    }

    function 1.1 {
        scoreboard players set DisableOffhand OldCombatSettings 1
        scoreboard players set AllowOffhandForSomeItems OldCombatSettings 0
        scoreboard players set BuffKB OldCombatSettings 0
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 1
        scoreboard players set SwordBlocking OldCombatSettings 1
        scoreboard players set RegenExhaustion OldCombatSettings 300
        scoreboard players set OldToolDamage OldCombatSettings 1
        scoreboard players set SprintingCrits OldCombatSettings 1
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 1
        scoreboard players set AirKB OldCombatSettings 1
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 1
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set OldRegen OldCombatSettings 1
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 1
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 1
        scoreboard players set SharpnessBoost OldCombatSettings 125
        scoreboard players set SharpnessBase OldCombatSettings 0
        scoreboard players set OldMobAI OldCombatSettings 1
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set OldSharpness OldCombatSettings 1
        scoreboard players set OldTooltips OldCombatSettings 1
        scoreboard players set OldFishingBobberVel OldCombatSettings 1
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set FishingBobberGravity OldCombatSettings 50
    }

    function 1.8 {
        scoreboard players set DisableOffhand OldCombatSettings 1
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set AllowOffhandForSomeItems OldCombatSettings 0
        scoreboard players set BuffKB OldCombatSettings 0
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 1
        scoreboard players set SwordBlocking OldCombatSettings 1
        scoreboard players set RegenExhaustion OldCombatSettings 300
        scoreboard players set OldToolDamage OldCombatSettings 1
        scoreboard players set SprintingCrits OldCombatSettings 1
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 1
        scoreboard players set AirKB OldCombatSettings 1
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 1
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set OldRegen OldCombatSettings 1
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 1
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 1
        scoreboard players set SharpnessBoost OldCombatSettings 125
        scoreboard players set SharpnessBase OldCombatSettings 0
        
        scoreboard players set OldMobAI OldCombatSettings 0
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set OldSharpness OldCombatSettings 1
        scoreboard players set OldTooltips OldCombatSettings 1
        scoreboard players set OldFishingBobberVel OldCombatSettings 1
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set FishingBobberGravity OldCombatSettings 50
    }
    function 1.9 {
        scoreboard players set DisableOffhand OldCombatSettings 0
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set AllowOffhandForSomeItems OldCombatSettings 0
        scoreboard players set BuffKB OldCombatSettings 0
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 0
        scoreboard players set SwordBlocking OldCombatSettings 0
        scoreboard players set RegenExhaustion OldCombatSettings 600
        scoreboard players set OldToolDamage OldCombatSettings 0
        scoreboard players set SprintingCrits OldCombatSettings 0
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 0
        scoreboard players set AirKB OldCombatSettings 0
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 0
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 40
        scoreboard players set OldRegen OldCombatSettings 0
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 1
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 1
        scoreboard players set SharpnessBoost OldCombatSettings 50
        scoreboard players set SharpnessBase OldCombatSettings 50
        scoreboard players set OldMobAI OldCombatSettings 0
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set OldSharpness OldCombatSettings 0
        scoreboard players set OldTooltips OldCombatSettings 0
        scoreboard players set OldFishingBobberVel OldCombatSettings 1
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set FishingBobberGravity OldCombatSettings 50
    }
    function 1.11 {
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set DisableOffhand OldCombatSettings 0
        scoreboard players set AllowOffhandForSomeItems OldCombatSettings 0
        scoreboard players set BuffKB OldCombatSettings 0
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 0
        scoreboard players set SwordBlocking OldCombatSettings 0
        scoreboard players set RegenExhaustion OldCombatSettings 600
        scoreboard players set OldToolDamage OldCombatSettings 0
        scoreboard players set SprintingCrits OldCombatSettings 0
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 0
        scoreboard players set AirKB OldCombatSettings 0
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 0
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set OldRegen OldCombatSettings 0
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 0
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 1
        scoreboard players set SharpnessBoost OldCombatSettings 50
        scoreboard players set SharpnessBase OldCombatSettings 50
        scoreboard players set OldMobAI OldCombatSettings 0
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set OldSharpness OldCombatSettings 0
        scoreboard players set OldTooltips OldCombatSettings 0
        scoreboard players set OldFishingBobberVel OldCombatSettings 0
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set FishingBobberGravity OldCombatSettings 50
    }
    function 1.13 {
        scoreboard players set EnableWander OldCombatSettings 0
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set DisableOffhand OldCombatSettings 0
        scoreboard players set AllowOffhandForSomeItems OldCombatSettings 0
        scoreboard players set BuffKB OldCombatSettings 0
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 0
        scoreboard players set SwordBlocking OldCombatSettings 0
        scoreboard players set RegenExhaustion OldCombatSettings 600
        scoreboard players set OldToolDamage OldCombatSettings 0
        scoreboard players set SprintingCrits OldCombatSettings 0
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 0
        scoreboard players set AirKB OldCombatSettings 0
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 0
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set OldRegen OldCombatSettings 0
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 0
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 0
        scoreboard players set SharpnessBoost OldCombatSettings 50
        scoreboard players set SharpnessBase OldCombatSettings 50
        scoreboard players set OldSharpness OldCombatSettings 0
        scoreboard players set OldTooltips OldCombatSettings 0
        scoreboard players set OldFishingBobberVel OldCombatSettings 0
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set FishingBobberGravity OldCombatSettings 50
    }
    function bedrock {
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set DisableOffhand OldCombatSettings 1
        scoreboard players set AllowOffhandForSomeItems OldCombatSettings 1
        scoreboard players set BuffKB OldCombatSettings 0
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 1
        scoreboard players set SwordBlocking OldCombatSettings 0
        scoreboard players set RegenExhaustion OldCombatSettings 300
        scoreboard players set OldToolDamage OldCombatSettings 1
        scoreboard players set SprintingCrits OldCombatSettings 1
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 0
        scoreboard players set AirKB OldCombatSettings 1
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 1
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 170
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set OldRegen OldCombatSettings 1
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 0
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 0
        scoreboard players set SharpnessBoost OldCombatSettings 125
        scoreboard players set SharpnessBase OldCombatSettings 0
        scoreboard players set OldMobAI OldCombatSettings 0
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set OldSharpness OldCombatSettings 1
        scoreboard players set OldTooltips OldCombatSettings 1
        scoreboard players set OldFishingBobberVel OldCombatSettings 1
        scoreboard players set FishingBobberGravity OldCombatSettings 50
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 1
    }

    function legacy_console {
        function bedrock
        scoreboard players set SwordBlocking OldCombatSettings 1
        scoreboard players set DisableKBResist OldCombatSettings 1
        scoreboard players set AirKB OldCombatSettings 0
        scoreboard players set OldRegen OldCombatSettings 0
        scoreboard players set OldFishingBobberVel OldCombatSettings 1
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
    }


}


function changelog {
    tellraw @a "Old Combat Changelog:"
    execute unless score PreviousDataVersion OldCombatSettings matches 1.. run tellraw @a "Thank you for installing Old Combat Datapack!"
    execute unless score PreviousDataVersion OldCombatSettings matches 1.. run return 0
    execute if score PreviousDataVersion OldCombatSettings matches ..1 run {
        tellraw @a "With Config Data Version 2:"
        tellraw @a "Reloading the pack or the world/server no longer resets the config; It now only resets after the pack updates"
        tellraw @a "Technical: Config Data Version is now 2"
        tellraw @a "Added a changelog (This!)"
        tellraw @a "Warn players when the config was saved in a newer version of Old Combat"
    }
    execute if score PreviousDataVersion OldCombatSettings matches ..2 run {
        tellraw @a "With Config Data Version 3:"    
        tellraw @a "Fixed a bug where the pack still reset the config after a reload"
        tellraw @a "Changed up some text"
    }
    execute if score PreviousDataVersion OldCombatSettings matches ..3 run {
        tellraw @a "With Config Data Version 4:"    
        IF $1_21_4compile==false {
            tellraw @a ["Added the Fishing Rod Knockback mechanic. ",{text:"Click here to see it in the config.",underlined:true,click_event:{action:"run_command",command:"function oldcombat:config"}}]
        } ELSE {
            tellraw @a ["Added the Fishing Rod Knockback mechanic. ",{"text":"Click here to see it in the config.","underlined":true,"clickEvent":{"action":"run_command","value":"/function oldcombat:config"}}]            
        }
        tellraw @a "Made fishing bobbers from fishing rods go further."
        tellraw @a "The setting for this shows as a Vector2 Input in the config (an input with 2 values, x and y)."
    }
    execute if score PreviousDataVersion OldCombatSettings matches ..4 run {
        tellraw @a "With Config Data Version 5:"    
        tellraw @a "Fixed some bugs"
        tellraw @a "Changed up some text"
    }
    execute if score PreviousDataVersion OldCombatSettings matches ..5 run {
        tellraw @a "With Config Data Version 6:"    
        tellraw @a "Added A LOT of features (check out /function oldcombat:config! It has a whole second page now!)"
        IF $1_21_4compile==false {
            tellraw @a ["Some of the new features require Andrew's Datapack Utilities to work properly. ",{text:"Click here to see it on Modrinth.",underlined:true,click_event:{action:"open_url",url:"https://modrinth.com/mod/andrews-pack-utils"}}]
        } ELSE {
            tellraw @a ["Some of the new features require Andrew's Datapack Utilities to work properly. ",{"text":"Click here to see it on Modrinth.","underlined":true,"clickEvent":{"action":"open_url","value":"https://modrinth.com/mod/andrews-pack-utils"}}]
        }

    }
    execute if score PreviousDataVersion OldCombatSettings matches ..5 run {
        tellraw @a "With Config Data Version 7:"    
        tellraw @a "Added A LOT more features (check them out on the second page of /function oldcombat:config!)"
        tellraw @a "Added Presets"
        tellraw @a "Added a confirmation when you try to run a dangerous function (such as oldcombat:disable)"
        tellraw @a "Fixed a lot of bugs."
        IF $1_21_4compile==false {
            tellraw @a ["Some of the new features require Andrew's Datapack Utilities to work properly. ",{text:"Click here to see it on Modrinth.",underlined:true,click_event:{action:"open_url",url:"https://modrinth.com/mod/andrews-pack-utils"}}]
        } ELSE {
            tellraw @a ["Some of the new features require Andrew's Datapack Utilities to work properly. ",{"text":"Click here to see it on Modrinth.","underlined":true,"clickEvent":{"action":"open_url","value":"https://modrinth.com/mod/andrews-pack-utils"}}]
        }

    }

}

function disable_modern_items {
    execute if score DisableModernPVPItems OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] at @s run {
        block { {item:crossbow}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Crossbows are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The crossbow's crafting materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:iron_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:tripwire_hook",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:string",count:2b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:stick",count:3b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:mace}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Maces are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The mace's crafting materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:heavy_core",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:breeze_rod",count:1b}
            }
            
                $block { {item:"$(item)"}   
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }
            
            $clear @s $(item) 1
        }
        block { {item:trident}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
                tellraw @s "§4[Old Combat]: Tridents are disabled."
            
            $block { {item:"$(item)"}
                execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                playsound entity.item.break player @a ~ ~ ~
            }
            
            $clear @s $(item) 1
        }
        block { {item:shield}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Shields are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The shield's crafting materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:oak_planks",count:6b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:iron_ingot",count:1b}
            }
            
                $block { {item:"$(item)"}   
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }
            
            $clear @s $(item) 1
        }
        block { {item:spectral_arrow}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Spectral arrows are disabled."
            $clear @s $(item)
        }
        block { {item:tipped_arrow}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Tipped arrows are disabled."
            $clear @s $(item)
        }
        block { {item:lingering_potion}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Lingering Potions are disabled."            
                $block { {item:"$(item)"}   
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.splash_potion.break player @a ~ ~ ~
                }
            
            $clear @s $(item) 1
        }


    }
}

dir utils {
    function get_vectors_from_dir {
        execute store result score IsCenterForceLoaded OldCombatTemp run forceload query 0 0
        execute unless score IsCenterForceLoaded OldCombatTemp matches 1 run forceload add 0 0
        execute positioned 0.0 0.0 0.0 rotated ~ ~ run summon marker ^ ^ ^1 {Tags:["vector"]}
        # tellraw @a {nbt:"Pos",entity:"@n[type=marker,tag=vector]"}
        execute store result score VecX OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[0] 1000
        execute store result score VecY OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[1] 1000
        execute store result score VecZ OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[2] 1000
        data modify storage oldcombat:temp vectors set from entity @n[tag=vector,type=marker] Pos
        kill @e[type=marker,tag=vector]
        execute unless score IsCenterForceLoaded OldCombatTemp matches 1 run forceload remove 0 0
    }
    function get_walk_forward_vectors {
        execute store result score IsCenterForceLoaded OldCombatTemp run forceload query 0 0
        execute unless score IsCenterForceLoaded OldCombatTemp matches 1 run forceload add 0 0
        execute positioned 0.0 0.0 0.0 rotated ~ 0 run summon marker ^ ^ ^1 {Tags:["vector"]}
        # tellraw @a {nbt:"Pos",entity:"@n[type=marker,tag=vector]"}
        execute store result score VecX OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[0] 1000
        execute store result score VecY OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[1] 1000
        execute store result score VecZ OldCombatTemp run data get entity @n[tag=vector,type=marker] Pos[2] 1000
        data modify storage oldcombat:temp vectors set from entity @n[tag=vector,type=marker] Pos
        kill @e[type=marker,tag=vector]
        execute unless score IsCenterForceLoaded OldCombatTemp matches 1 run forceload remove 0 0
    }

}

function disable_netherite_items {
    execute if score DisableNetheriteItems OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] at @s run {
        block { {item:netherite_helmet}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite helmet's smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_helmet",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_chestplate}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite chestplate's smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_chestplate",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_leggings}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite leggings' smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_leggings",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_boots}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite boots' smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_boots",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_sword}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite sword's smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_sword",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_axe}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite axe's smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_axe",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_shovel}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite shovel's smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_shovel",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_pickaxe}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite pickaxe's smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_pickaxe",count:1b}
            } 
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_hoe} 
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            IF ($1_21_4compile == true) {
                tellraw @s "§4[Old Combat]: Netherite items are disabled."
            } ELSE {
                data modify storage oldcombat:temp sdadv set value [{color:dark_purple,text:"",hover_event:{action:show_text,value:[{translate:advancements.husbandry.netherite_hoe.title,color:dark_purple},"\n",{translate:advancements.husbandry.netherite_hoe.description}]}},"[",{translate:"advancements.husbandry.netherite_hoe.title"},"]"]
                tellraw @s [{text:"That's some ",color:dark_red},{nbt:"sdadv",storage:"oldcombat:temp",interpret:true}, {text:", but netherite items are disabled.",color:dark_red,hover_event:{action:show_text,value:""}}]
            }
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite hoe's smithing materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_upgrade_smithing_template",count:1b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:diamond_hoe",count:1b}
            }
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_block}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite block's crafting materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_ingot",count:9b}
            } 
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_ingot}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite ingot's crafting materials were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:netherite_scrap",count:4b}
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:gold_ingot",count:4b}
            } 
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }
        block { {item:netherite_scrap}
            $execute unless items entity @s armor.* $(item) unless items entity @s weapon.* $(item) unless items entity @s inventory.* $(item) unless items entity @s hotbar.* $(item) run return fail
            tellraw @s "§4[Old Combat]: Netherite items are disabled."
            execute if score ReturnMaterialsOfDisabledItems OldCombatSettings matches 1 anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run {
                tellraw @s "The netherite scrap's smelting material were dropped on the ground."
                throw_custom_stack 0.4 80 250 15 {id:"minecraft:ancient_debris",count:1b}
            } 
                $block { {item:"$(item)"}
                    execute unless score BreakDisabledTools OldCombatSettings matches 1 run return fail
                    $execute anchored eyes positioned ^ ^ ^ run particle minecraft:item{item:"$(item)"} ^ ^-0.1 ^0.5 0 0 0 0.03 5
                    playsound entity.item.break player @a ~ ~ ~
                }

            $clear @s $(item) 1
        }

    }
}

function buff_knockback {
    execute if score @s HurtByTimestamp = @s LastHurtByTimestamp unless entity @s[type=player] run return fail
    execute unless data entity @s {HurtTime:10s} unless data entity @s {HurtTime:9s} unless data entity @s {HurtTime:8s} run return fail
    execute store result storage oldcombat:temp horizontal int 1 run scoreboard players get BuffKBValue.X OldCombatSettings
    execute store result storage oldcombat:temp vertical int 1 run scoreboard players get BuffKBValue.Y OldCombatSettings
    execute store result storage oldcombat:temp sprinthorizontal int 1 run scoreboard players get BuffKBValueSprint.X OldCombatSettings
    execute store result storage oldcombat:temp sprintvertical int 1 run scoreboard players get BuffKBValueSprint.Y OldCombatSettings
    execute on attacker run tag @s add attacker
    execute store result score Sprinting OldCombatTemp run scoreboard players get @n[tag=attacker] WereSprinting
    execute if score BuffSprintKB OldCombatSettings matches 1 if score Sprinting OldCombatTemp matches 1 run say ow 
    execute if score BuffKB OldCombatSettings matches 1 unless entity @s[tag=oldcombatignore] run { with storage oldcombat:temp
    execute if score aputils OldCombatTemp matches 0 run {
        $execute store result entity @s Motion[0] double 0.01 run data get entity @s Motion[0] $(horizontal)
        $execute store result entity @s Motion[1] double 0.01 run data get entity @s Motion[1] $(vertical)
        $execute store result entity @s Motion[2] double 0.01 run data get entity @s Motion[2] $(horizontal)
        
        

        $execute if score BuffSprintKB OldCombatSettings matches 1 if score Sprinting OldCombatTemp matches 1.. store result entity @s Motion[0] double 0.01 run data get entity @s Motion[0] $(sprinthorizontal)
        $execute if score BuffSprintKB OldCombatSettings matches 1 if score Sprinting OldCombatTemp matches 1.. store result entity @s Motion[1] double 0.01 run data get entity @s Motion[1] $(sprintvertical)
        $execute if score BuffSprintKB OldCombatSettings matches 1 if score Sprinting OldCombatTemp matches 1.. store result entity @s Motion[2] double 0.01 run data get entity @s Motion[2] $(sprinthorizontal)

    } else execute run { with storage oldcombat:temp
        $execute store result storage oldcombat:temp x double 0.01 run data get entity @s Motion[0] $(horizontal)
        $execute store result storage oldcombat:temp y double 0.01 run data get entity @s Motion[1] $(vertical)
        $execute store result storage oldcombat:temp z double 0.01 run data get entity @s Motion[2] $(horizontal)

        $execute if score BuffSprintKB OldCombatSettings matches 1 if score Sprinting OldCombatTemp matches 1.. store result storage oldcombat:temp x double 0.01 run data get storage oldcombat:temp x $(sprinthorizontal)
        $execute if score BuffSprintKB OldCombatSettings matches 1 if score Sprinting OldCombatTemp matches 1.. store result storage oldcombat:temp y double 0.01 run data get storage oldcombat:temp y $(sprintvertical)
        $execute if score BuffSprintKB OldCombatSettings matches 1 if score Sprinting OldCombatTemp matches 1.. store result storage oldcombat:temp z double 0.01 run data get storage oldcombat:temp z $(sprinthorizontal)

        block { with storage oldcombat:temp
            $aputils velocity @s $(x) $(y) $(z) set
        }

    }
    
    }
    tag @e remove attacker    
}


function startup minecraft:load {
    scoreboard objectives add OldCombatSettings dummy
    scoreboard objectives add OldCombatTemp.Sprinting dummy
    scoreboard objectives add OldCombatTemp dummy
    scoreboard objectives add foodTickTimer dummy
    scoreboard objectives add WasOnGround dummy
    scoreboard objectives add OnGround dummy
    scoreboard objectives add HurtByTimestamp dummy
    scoreboard objectives add LastHurtByTimestamp dummy
    scoreboard objectives add Hunger dummy
    scoreboard objectives add StartDelay dummy
    scoreboard objectives add HungerSat dummy
    scoreboard objectives add TicksInWater dummy
    scoreboard objectives add Food food
    scoreboard objectives add ActualFoodLevel dummy
    scoreboard players set aputils OldCombatTemp 0
    scoreboard players set aputilsver OldCombatTemp -1
    function detect_aputils
    execute if score aputils OldCombatTemp matches 0 run {
        IF $1_21_4compile==false {
            logger info ["Some features require Andrew's Datapack Utilities to work properly. Consider adding it! ",{text:"Click here to see it on Modrinth.",underlined:true,click_event:{action:"open_url",url:"https://modrinth.com/mod/andrews-pack-utils"}}]
        } ELSE {
            logger info ["Some features require Andrew's Datapack Utilities to work properly. Consider adding it! ",{"text":"Click here to see it on Modrinth.","underlined":true,"clickEvent":{"action":"open_url","value":"https://modrinth.com/mod/andrews-pack-utils"}}]
        }
    }
    scoreboard players set PackVersion OldCombatTemp <%data_version%>
    # tellraw @a {score:{objective:"OldCombatTemp",name:"PackVersion"}}
    # tellraw @a {score:{objective:"OldCombatSettings",name:"DataVersion"}}
    execute unless score DataVersion OldCombatSettings matches 0.. run scoreboard players set DataVersion OldCombatSettings 0
    execute if score DataVersion OldCombatSettings < PackVersion OldCombatTemp run {
        # changelog is now deprecated, keep forgetting to update it and it also takes a little bit of extra time
        # schedule function oldcombat:changelog 3s
        say Old Combat: Reloading the Config
        logger info "Loading Default Settings"
        # Add a start delay to ensure no issues arise while the world is loading, offhand items will turn into a single block of stone if this didn't exist. Issue still exists in multiplayer, though. Trying to figure out how to fix that on servers too.
        scoreboard players set StartDelay OldCombatTemp 60
        
        scoreboard players set RegenExhaustion OldCombatSettings 300
        scoreboard players set DisableOffhand OldCombatSettings 1
        scoreboard players set BuffKB OldCombatSettings 1
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set BuffSprintKB OldCombatSettings 1
        scoreboard players set BuffKBValueSprint.X OldCombatSettings 115
        scoreboard players set BuffKBValueSprint.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 1
        scoreboard players set SwordBlocking OldCombatSettings 1
        scoreboard players set OldToolDamage OldCombatSettings 1
        scoreboard players set SprintingCrits OldCombatSettings 1
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 1
        scoreboard players set AirKB OldCombatSettings 1
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set FishingRodKnockback OldCombatSettings 1
        scoreboard players set FurtherFishingBobber OldCombatSettings 1
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set OldRegen OldCombatSettings 1
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 1
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 0
        scoreboard players set OldTooltips OldCombatSettings 1
        scoreboard players set OldSharpness OldCombatSettings 1
        scoreboard players set SharpnessBase OldCombatSettings 0
        scoreboard players set OldMobAI OldCombatSettings 0
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set SharpnessBoost OldCombatSettings 125
        scoreboard players set FishingBobberGravity OldCombatSettings 50
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set OldFishingBobberVel OldCombatSettings 1
        scoreboard players set ApplyToolTipToAll OldCombatSettings 1
        scoreboard players operation PreviousDataVersion OldCombatSettings = DataVersion OldCombatSettings
        scoreboard players set DataVersion OldCombatSettings <%data_version%>
    } else execute run {
        execute if score DataVersion OldCombatSettings > PackVersion OldCombatTemp run tellraw @a "§4The config was saved in a newer version of Old Combat Datapack, this may cause some issues!"
    }
}




function spawn_marker_adjacent {
    $summon marker ~$(x) ~$(y) ~$(z) $(nbt)        
}

function defaults {
    confirmnoreturn <%"/function oldcombat:noconfirm/defaults"%>
}

function reset {
    confirmnoreturn <%"/function oldcombat:noconfirm/reset"%>
}

function old_regen {
    @Using OldCombatTemp
    @Requires aputils
    execute unless score OldHungerSystem OldCombatSettings matches 1 if score OldRegen OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] unless entity @s[nbt={Health:0f}] run {
        execute if score @s Hunger matches -1.. store result score foodLevel OldCombatTemp run data get entity @s foodLevel 1
        execute unless score @s Hunger matches -1.. run scoreboard players operation @s foodLevel = @s Hunger
        execute store result score foodSaturationLevel OldCombatTemp run data get entity @s foodSaturationLevel 1
        # these two values are floating point so they are going to be scaled by 100 to keep most of the meaningful precision
        execute store result score foodExhaustionLevel OldCombatTemp run data get entity @s foodExhaustionLevel 100
        execute store result score Health OldCombatTemp run data get entity @s Health 100
        execute store result score MaxHealth OldCombatTemp run attribute @s max_health get 100
            execute if score foodLevel OldCombatTemp matches 18.. unless score Health OldCombatTemp >= MaxHealth OldCombatTemp run {

                data modify entity @s foodTickTimer set value 0
                scoreboard players add @s foodTickTimer 1
                execute if score @s foodTickTimer > regenRate OldCombatSettings run {
                    scoreboard players set @s foodTickTimer 0
                    scoreboard players add Health OldCombatTemp 100
                    scoreboard players operation foodExhaustionLevel OldCombatTemp += RegenExhaustion OldCombatSettings
                    execute store result entity @s foodLevel int 1 run scoreboard players get foodLevel OldCombatTemp
                    execute store result entity @s foodSaturationLevel float 1 run scoreboard players get foodSaturationLevel OldCombatTemp
                    execute store result entity @s foodExhaustionLevel float 0.01 run scoreboard players get foodExhaustionLevel OldCombatTemp
                    execute store result entity @s Health float 0.01 run scoreboard players get Health OldCombatTemp
                }
            } else execute run {
                scoreboard players set @s foodTickTimer 0
            }
    } else execute as @a run {
        scoreboard players set @s foodTickTimer 0
    }
}

dir noconfirm {
    function disable {
        scoreboard objectives add OldCombatSettings dummy
        scoreboard objectives add OldCombatTemp dummy
        logger info "Disabling all settings"
        scoreboard players set DisableOffhand OldCombatSettings 0
        scoreboard players set DisableAttackCooldown OldCombatSettings 0
        scoreboard players set SwordBlocking OldCombatSettings 0
        scoreboard players set OldToolDamage OldCombatSettings 0
        scoreboard players set SprintingCrits OldCombatSettings 0
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 0
        scoreboard players set AirKB OldCombatSettings 0
        scoreboard players set BuffSprintKB OldCombatSettings 0
        scoreboard players set BuffKB OldCombatSettings 0
        scoreboard players set FishingRodKnockback OldCombatSettings 0
        scoreboard players set OldRegen OldCombatSettings 0
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set ShieldNerf OldCombatSettings 0
        scoreboard players set DisableAttackSounds OldCombatSettings 0
        scoreboard players set DisableSwimming OldCombatSettings 0
        scoreboard players set OldTooltips OldCombatSettings 0
        scoreboard players set OldSharpness OldCombatSettings 0
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set OldFishingBobberVel OldCombatSettings 0
        scoreboard players set EnableWander OldCombatSettings 0
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set OldMobAI OldCombatSettings 0
        

    }

    function defaults {
        scoreboard objectives add OldCombatSettings dummy
        scoreboard objectives add OldCombatTemp dummy
        logger info "Loading Default Settings"
        execute if score aputils OldCombatTemp matches 0 run {
            IF $1_21_4compile==false {
                logger info ["Some features require Andrew's Datapack Utilities to work properly. Consider adding it! ",{text:"Click here to see it on Modrinth.",underlined:true,click_event:{action:"open_url",url:"https://modrinth.com/mod/andrews-pack-utils"}}]
            } ELSE {
                logger info ["Some features require Andrew's Datapack Utilities to work properly. Consider adding it! ",{"text":"Click here to see it on Modrinth.","underlined":true,"clickEvent":{"action":"open_url","value":"https://modrinth.com/mod/andrews-pack-utils"}}]
            }
        }

        # Add a start delay to ensure no issues arise while the world is loading, offhand items will turn into a single block of stone if this didn't exist
        scoreboard players set StartDelay OldCombatTemp 60
        scoreboard players set BuffSprintKB OldCombatSettings 1
        scoreboard players set BuffKBValueSprint.X OldCombatSettings 115
        scoreboard players set BuffKBValueSprint.Y OldCombatSettings 105
        scoreboard players set DisableOffhand OldCombatSettings 1
        scoreboard players set BuffKB OldCombatSettings 1
        scoreboard players set BuffKBValue.X OldCombatSettings 125
        scoreboard players set BuffKBValue.Y OldCombatSettings 105
        scoreboard players set DisableAttackCooldown OldCombatSettings 1
        scoreboard players set SwordBlocking OldCombatSettings 1
        scoreboard players set RegenExhaustion OldCombatSettings 300
        scoreboard players set OldToolDamage OldCombatSettings 1
        scoreboard players set SprintingCrits OldCombatSettings 1
        scoreboard players set DisableSprint OldCombatSettings 0
        scoreboard players set DisableKBResist OldCombatSettings 1
        scoreboard players set AirKB OldCombatSettings 1
        scoreboard players set FishingRodKnockback OldCombatSettings 1
        scoreboard players set FishingBobberBoost.X OldCombatSettings 150
        scoreboard players set FishingBobberBoost.Y OldCombatSettings 150
        scoreboard players set AirKBForce OldCombatSettings 30
        scoreboard players set AirKBMix OldCombatSettings 110
        scoreboard players set OldRegen OldCombatSettings 1
        scoreboard players set regenRate OldCombatSettings 80
        scoreboard players set DisableModernPVPItems OldCombatSettings 0
        scoreboard players set DisableNetheriteItems OldCombatSettings 0
        scoreboard players set BreakDisabledTools OldCombatSettings 1
        scoreboard players set ReturnMaterialsOfDisabledItems OldCombatSettings 1
        scoreboard players set ShieldNerf OldCombatSettings 1
        scoreboard players set DisableAttackSounds OldCombatSettings 1
        scoreboard players set DisableSwimming OldCombatSettings 0
        scoreboard players set SharpnessBoost OldCombatSettings 125
        scoreboard players set SharpnessBase OldCombatSettings 0
        scoreboard players set OldSharpness OldCombatSettings 1
        scoreboard players set OldMobAI OldCombatSettings 0
        scoreboard players set OldHungerSystem OldCombatSettings 0
        scoreboard players set OldFood OldCombatSettings 0
        scoreboard players set EnableWander OldCombatSettings 1
        scoreboard players set DisableCrits OldCombatSettings 0
        scoreboard players operation PreviousDataVersion OldCombatSettings = DataVersion OldCombatSettings
        scoreboard players set DataVersion OldCombatSettings <%data_version%>
        scoreboard players set ApplyToolTipToAll OldCombatSettings 1
        scoreboard players set OldTooltips OldCombatSettings 1
        scoreboard players set FishingBobberGravity OldCombatSettings 50
        scoreboard players set BedrockFishingBobberPhysics OldCombatSettings 0
        scoreboard players set OldFishingBobberVel OldCombatSettings 1


    }
    function reset {
        function oldcombat:noconfirm/uninstall
        schedule function oldcombat:on_load 5t
    }
    function uninstall {
        scoreboard objectives remove OldCombatSettings
        scoreboard objectives remove OldCombatTemp
    }
}

function disable {
    confirmnoreturn <%"function oldcombat:noconfirm/disable"%>
}

function uninstall {
    confirmnoreturn <%"function oldcombat:noconfirm/uninstall"%> Run this only after making sure nothing will persist after.
}


function air_knockback {
    execute if score @s HurtByTimestamp = @s LastHurtByTimestamp unless entity @s[type=player] run return fail
    execute unless data entity @s {HurtTime:10s} unless data entity @s {HurtTime:9s} unless data entity @s {HurtTime:8s} unless entity @s[type=player] run return fail
    execute if entity @s[type=ender_dragon] run return fail
    execute if score AirKB OldCombatSettings matches 1 unless entity @s[tag=tempIgnoreAirKB] run {
        execute unless data entity @s {Motion:[0.0d,0.0d,0.0d]} if entity @s[nbt={OnGround:0b}] run {
            execute on attacker if entity @s[tag=oldcombatignore] run return fail
            execute store result score vel OldCombatTemp run data get entity @s Motion[1] 100
            scoreboard players operation vel2 OldCombatTemp = vel OldCombatTemp
            # tellraw @a {score:{name:"vel",objective:"OldCombatTemp"}}
            scoreboard players operation vel OldCombatTemp = AirKBForce OldCombatSettings
            scoreboard players set 100 OldCombatTemp 100
            
            # tellraw @a {score:{name:"vel",objective:"OldCombatTemp"}}
            scoreboard players operation vel OldCombatTemp -= vel2 OldCombatTemp
            # tellraw @a {score:{name:"vel",objective:"OldCombatTemp"}}
            scoreboard players operation vel OldCombatTemp *= AirKBMix OldCombatSettings
            # tellraw @a {score:{name:"vel",objective:"OldCombatTemp"}}
            scoreboard players operation vel OldCombatTemp /= 100 OldCombatTemp
            # tellraw @a {score:{name:"vel",objective:"OldCombatTemp"}}
            scoreboard players operation vel OldCombatTemp += vel2 OldCombatTemp
            # tellraw @a {score:{name:"vel",objective:"OldCombatTemp"}}
            execute if score aputils OldCombatTemp matches 0 run {
                execute store result entity @s Motion[1] double 0.01 run scoreboard players get vel OldCombatTemp
            } else execute run {
                execute store result storage oldcombat:temp kb double 0.01 run scoreboard players get vel OldCombatTemp
                data modify storage oldcombat:temp dx set from entity @s Motion[0]
                data modify storage oldcombat:temp dz set from entity @s Motion[2]
                block knockback { with storage oldcombat:temp
                    $aputils velocity @s $(dx) $(kb) $(dz) set
                }
                
            }
            
        }
        tag @s add akbprocessed
    }
    tag @s remove tempIgnoreAirKB
}

function disable_cooldown {
    execute if score DisableAttackCooldown OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] run {
        attribute @s attack_speed modifier add oldcombat:disable 1000 add_value
    } else execute as @a run {
        attribute @s attack_speed modifier remove oldcombat:disable
    }
}

function disable_attack_sounds {
    execute if score DisableAttackSounds OldCombatSettings matches 1 run {
        stopsound @a * minecraft:entity.player.attack.knockback
        stopsound @a * minecraft:entity.player.attack.weak
        stopsound @a * minecraft:entity.player.attack.strong
        stopsound @a * minecraft:entity.player.attack.crit
        stopsound @a * minecraft:entity.player.attack.nodamage
        stopsound @a * minecraft:entity.player.attack.sweep
    }
}

function disable_sprinting {
    execute if score DisableSprint OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] run {
        @Deprecated
        attribute @s movement_speed modifier remove minecraft:sprinting
    }
}



function disable_kb_resist {
    execute if score DisableKBResist OldCombatSettings matches 1 unless entity @s[tag=oldcombatignore] run {
        execute as @e run attribute @s knockback_resistance modifier add oldcombat:nokbresist -1 add_multiplied_total
    } else execute run {
        execute as @e run attribute @s knockback_resistance modifier remove oldcombat:nokbresist
    }
}

function old_tool_damages {
    execute if score OldToolDamage OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] if items entity @s weapon.mainhand *[minecraft:attribute_modifiers~{modifiers:{contains:[{attribute:"attack_damage"}]}}] run {
        attribute @s attack_damage modifier remove base_attack_damage
        data modify storage oldcombat:temp toolid set from entity @s SelectedItem.id
        execute store result storage oldcombat:temp tooldmg double 0.01 run { with storage oldcombat:temp        
            $return run data get storage oldcombat:data damages.old.$(toolid) 100
        }
        block { with storage oldcombat:temp
            $attribute @s attack_damage modifier add base_attack_damage $(tooldmg) add_value
        }
    }
}

tag entities large_hitboxes {
    minecraft:ravager
    minecraft:horse
    minecraft:wither
    minecraft:ender_dragon
    minecraft:elder_guardian
    minecraft:iron_golem
    minecraft:camel
    minecraft:donkey
    minecraft:mule
}

tag damage_type bypasses_sword_blocking {
    #minecraft:bypasses_shield
    #minecraft:is_fall
    #minecraft:bypasses_invulnerability
    minecraft:starve
    #minecraft:is_drowning
    minecraft:in_fire
    minecraft:on_fire
    minecraft:lava
    minecraft:campfire
    minecraft:hot_floor
    minecraft:freeze
}

function sword_blocking {
    execute if score SwordBlocking OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] if items entity @s weapon.mainhand #minecraft:swords unless data entity @s {SelectedItem:{components:{"minecraft:custom_data":{oldcombat_blocking:1b}}}} run {
        modify_held_components {"minecraft:blocks_attacks":{disable_cooldown_scale:0,damage_reductions:[{base:0,factor:0.5,horizontal_blocking_angle:180}],block_sound:"entity.player.hurt",item_damage:{threshold:0f,base:0f,factor:0f},bypassed_by:"#oldcombat:bypasses_sword_blocking"},"minecraft:custom_data":{oldcombat_blocking:1b}}
    } else execute if score SwordBlocking OldCombatSettings matches 0 as @a if items entity @s weapon.mainhand #minecraft:swords if data entity @s {SelectedItem:{components:{"minecraft:custom_data":{oldcombat_blocking:1b}}}} run {
        remove_held_component "minecraft:blocks_attacks"
        remove_held_component "minecraft:custom_data".oldcombat_blocking
    }
}

function nerf_shields {
    
    execute if score ShieldNerf OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] if items entity @s weapon.mainhand shield unless data entity @s {SelectedItem:{components:{"minecraft:custom_data":{oldcombat_blocking:1b}}}} run {
        modify_held_components {"minecraft:blocks_attacks":{disable_cooldown_scale:1,damage_reductions:[{base:0,factor:0.66,horizontal_blocking_angle:90},{base:0,factor:1,horizontal_blocking_angle:90,type:"#minecraft:is_projectile"}],block_sound:"item.shield.block",item_damage:{threshold:0f,base:0f,factor:0f},block_delay_seconds:0.25,bypassed_by:"#bypasses_shield"},"minecraft:custom_data":{oldcombat_blocking:1b}}
    } else execute if score ShieldNerf OldCombatSettings matches 0 as @a if items entity @s weapon.mainhand shield if data entity @s {SelectedItem:{components:{"minecraft:custom_data":{oldcombat_blocking:1b}}}} run {
        remove_held_component "minecraft:blocks_attacks"
        remove_held_component "minecraft:custom_data".oldcombat_blocking
    }
    execute if score ShieldNerf OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] if items entity @s weapon.offhand shield unless data entity @s {equipment:{offhand:{components:{"minecraft:custom_data":{oldcombat_blocking:1b}}}}} run {
        modify_offheld_components {"minecraft:blocks_attacks":{disable_cooldown_scale:1,damage_reductions:[{base:0,factor:0.66,horizontal_blocking_angle:90},{base:0,factor:1,horizontal_blocking_angle:90,type:"#minecraft:is_projectile"}],block_sound:"item.shield.block",item_damage:{threshold:0f,base:0f,factor:0f},block_delay_seconds:0.25,bypassed_by:"#bypasses_shield"},"minecraft:custom_data":{oldcombat_blocking:1b}}
    } else execute if score ShieldNerf OldCombatSettings matches 0 as @a if items entity @s weapon.offhand shield if data entity @s {equipment:{offhand:{components:{"minecraft:custom_data":{oldcombat_blocking:1b}}}}} run {
        remove_offheld_component "minecraft:blocks_attacks"
        remove_offheld_component "minecraft:custom_data".oldcombat_blocking
    }

}

tag items acceptable_offhand {
    minecraft:arrow
    minecraft:spectral_arrow
    minecraft:nautilus_shell
    minecraft:firework_rocket
    minecraft:shield
    minecraft:tipped_arrow
    minecraft:totem_of_undying
    minecraft:filled_map
}

function block_offhand {
    execute if score DisableOffhand OldCombatSettings matches 1 as @a unless entity @s[tag=oldcombatignore] run {
        execute if score AllowOffhandForSomeItems OldCombatSettings matches 1 run {
            execute if items entity @s weapon.offhand * unless items entity @s weapon.offhand #oldcombat:acceptable_offhand run {
                execute at @s anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run function throw_offhand
                tellraw @s [{"color":"red","text":"[Old Combat]: This item can't be placed in this slot. "},{"color":"yellow","text":"[What can?]","hover_event":{"action":"show_text","value":["Your server/world's Old Combat settings are set to disallow items from entering the offhand slot, but the settings also allow certain items to be placed in the offhand anyways. The acceptable items tag can be changed by other datapacks, but by default the allowed items are the same as the allowed offhand items in Bedrock Edition, those being: Shields, any kind of arrow (for overriding the arrow that bows and crossbows should use), any map (except empty maps, you need to use (interact with) the map first), firework rockets (for loading fireworks into crossbows), Totems of Undying, and nautilus shells (don't ask me why, it's a bedrock thing)."]},"hoverEvent":{"action":"show_text","contents":["Your server/world's Old Combat settings are set to disallow items from entering the offhand slot, but the settings also allow certain items to be placed in the offhand anyways. The acceptable items tag can be changed by other datapacks, but by default the allowed items are the same as the allowed offhand items in Bedrock Edition, those being: Shields, any kind of arrow (for overriding the arrow that bows and crossbows should use), any map (except empty maps, you need to use (interact with) the map first), firework rockets (for loading fireworks into crossbows), Totems of Undying, and nautilus shells (don't ask me why, it's a bedrock thing)."]}}]
                item replace entity @s weapon.offhand with air
            }
        } else execute run {
            execute if items entity @s weapon.offhand * run {
                execute at @s anchored eyes positioned ^ ^ ^ positioned ~ ~-0.1 ~ run function throw_offhand
                tellraw @s [{"color":"red","text":"[Old Combat]: Items can't be placed in this slot. "},{"color":"yellow","text":"[Why?]","hover_event":{"action":"show_text","value":["Your server/world's Old Combat settings are set to disallow items from entering the offhand slot. If you're an operator (or on a singleplayer world with cheats enabled), you can change this in /function oldcombat:config. If you don't have cheats enabled in your world but want to change the settings, enable them with the Open to LAN feature."]},"hoverEvent":{"action":"show_text","contents":["Your server/world's Old Combat settings are set to disallow items from entering the offhand slot. If you're an operator (or on a singleplayer world with cheats enabled), you can change this in /function oldcombat:config. If you don't have cheats enabled in your world but want to change the settings, enable them with the Open to LAN feature."]}}]
                item replace entity @s weapon.offhand with air
            }
        }
    }
}

function throw_offhand {
    throw_offhand_stack 0.4 80 250 0
}

function throw_held {
    throw_held_stack 0.4 80 250 0
}

dir debug {
    function repairheld {
        remove_held_component "minecraft:damage"
    }

    function modify_held_components {
        summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
        item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s weapon.mainhand
        $data merge entity @n[type=armor_stand,tag=modify_slot] {equipment:{mainhand:{components:$(components)}}}
        item replace entity @s weapon.mainhand from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
        kill @e[type=armor_stand,tag=modify_slot]

    }

    function remove_held_component {
        summon armor_stand ~ ~ ~ {ShowArms:1b,Tags:["modify_slot"],Marker:true,Invisible:true,Invulnerable:true}
        item replace entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand from entity @s weapon.mainhand
        $data remove entity @n[type=armor_stand,tag=modify_slot] equipment.mainhand.components.$(data)
        item replace entity @s weapon.mainhand from entity @n[type=armor_stand,tag=modify_slot] weapon.mainhand
        kill @e[type=armor_stand,tag=modify_slot]

    }

    function info {
        tellraw @s "$1_21_4compile = <%$1_21_4compile%>"
        tellraw @s "build_time = <%build_time%>"
        tellraw @s "data_version = <%data_version%>"
    }
}

function heal {
    @Using OldCombatTemp
    @Requires aputils
    execute store result score Current OldCombatTemp run data get entity @s Health 10
    $execute store result entity @s Health float 0.1 run scoreboard players add Current OldCombatTemp $(value)
}

function disable_swimming {
    @Using OldCombatTemp
    @Requires aputils

    execute if score DisableSwimming OldCombatSettings matches 1 as @a at @s if block ~ ~ ~ water run {
        scoreboard players set 20 OldCombatTemp 20

        execute store result score foodLevel OldCombatTemp run data get entity @s foodLevel
        execute store result score foodSaturationLevel OldCombatTemp run data get entity @s foodSaturationLevel
        execute unless score @s Hunger matches -1 unless score @s Hunger matches ..1 run data modify entity @s foodLevel set value 1
        execute if score @s HungerSat matches -1 store result score @s HungerSat run scoreboard players get foodSaturationLevel OldCombatTemp
        execute if score @s Hunger matches -1 store result score @s Hunger run scoreboard players get foodLevel OldCombatTemp
        execute unless score @s Hunger matches -1 unless score @s Hunger matches ..1 run data modify entity @s foodLevel set value 1
        execute store result score foodLevel OldCombatTemp run data get entity @s foodLevel
        execute store result score foodExhaustionLevel OldCombatTemp run data get entity @s foodExhaustionLevel 100

        scoreboard players operation Change OldCombatTemp = @s Food
        scoreboard players remove Change OldCombatTemp 1
        execute unless score @s TicksInWater matches 0 run scoreboard players operation @s Hunger += Change OldCombatTemp

        # execute store result score foodSaturationLevel OldCombatTemp run data get entity @s foodSaturationLevel
        scoreboard players operation Change OldCombatTemp = foodSaturationLevel OldCombatTemp
        scoreboard players add Change OldCombatTemp 0
        execute unless score @s TicksInWater matches 0 run scoreboard players operation @s HungerSat += Change OldCombatTemp

        execute unless score @s Hunger matches ..1 run data modify entity @s foodLevel set value 1
        execute unless score @s HungerSat matches ..1 run data modify entity @s foodSaturationLevel set value 0.01f
        scoreboard players add @s TicksInWater 1
        scoreboard players operation @s Hunger < 20 OldCombatTemp
        scoreboard players operation @s HungerSat < 20 OldCombatTemp
    } else execute as @a run {
        execute if score @s Hunger matches 0.. store result entity @s foodLevel int 1 run scoreboard players get @s Hunger
        execute if score @s HungerSat matches 0.. store result entity @s foodSaturationLevel float 1 run scoreboard players get @s HungerSat
        scoreboard players set @s Hunger -1
        scoreboard players set @s HungerSat -1
        scoreboard players set @s TicksInWater 0
    }
}


